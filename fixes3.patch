From c7a1a16f363d8f547d484772beec82a09f08e5f1 Mon Sep 17 00:00:00 2001
From: Clemens Ladisch <clemens@ladisch.de>
Date: Fri, 19 Oct 2012 12:16:33 +0200
Subject: [PATCH 02/24] alsamixer: fix handling of removed controls

When we get a notification that an element has been removed, we have to
recreate our internal control representation to avoid accessing freed
memory.  (And the checking for SND_CTL_EVENT_MASK_REMOVE should actually
be done correctly while we're at it.)

Signed-off-by: Clemens Ladisch <clemens@ladisch.de>
---
 alsamixer/mainloop.c      |  9 ++++++++-
 alsamixer/mixer_display.c |  1 -
 alsamixer/mixer_widget.c  | 20 ++++++++------------
 alsamixer/mixer_widget.h  |  1 +
 4 files changed, 17 insertions(+), 14 deletions(-)

diff --git a/alsamixer/mainloop.c b/alsamixer/mainloop.c
index dbfef9b..351f57f 100644
--- a/alsamixer/mainloop.c
+++ b/alsamixer/mainloop.c
@@ -128,8 +128,15 @@ void mainloop(void)
 		}
 		if (!active_widget)
 			break;
-		if (controls_changed)
+		if (controls_changed) {
+			controls_changed = FALSE;
+			create_controls();
+			control_values_changed = FALSE;
 			display_controls();
+		} else if (control_values_changed) {
+			control_values_changed = FALSE;
+			display_controls();
+		}
 	}
 	free(pollfds);
 }
diff --git a/alsamixer/mixer_display.c b/alsamixer/mixer_display.c
index 8ba396a..b1f79d0 100644
--- a/alsamixer/mixer_display.c
+++ b/alsamixer/mixer_display.c
@@ -657,7 +657,6 @@ void display_controls(void)
 		display_no_controls();
 	}
 	display_scroll_indicators();
-	controls_changed = FALSE;
 }
 
 void compute_controls_layout(void)
diff --git a/alsamixer/mixer_widget.c b/alsamixer/mixer_widget.c
index caaf777..0c2b9e0 100644
--- a/alsamixer/mixer_widget.c
+++ b/alsamixer/mixer_widget.c
@@ -50,6 +50,7 @@ int focus_control_index;
 snd_mixer_selem_id_t *current_selem_id;
 unsigned int current_control_flags;
 
+bool control_values_changed;
 bool controls_changed;
 
 enum channel_mask {
@@ -59,20 +60,15 @@ enum channel_mask {
 
 static int elem_callback(snd_mixer_elem_t *elem, unsigned int mask)
 {
-	unsigned int i;
-
-	if (mask & (SND_CTL_EVENT_MASK_REMOVE |
-		    SND_CTL_EVENT_MASK_INFO |
-		    SND_CTL_EVENT_MASK_VALUE))
+	if (mask == SND_CTL_EVENT_MASK_REMOVE) {
 		controls_changed = TRUE;
+	} else {
+		if (mask & SND_CTL_EVENT_MASK_VALUE)
+			control_values_changed = TRUE;
 
-	if (mask & SND_CTL_EVENT_MASK_INFO)
-		for (i = 0; i < controls_count; ++i)
-			if (controls[i].elem == elem) {
-				controls[i].flags &= ~IS_ACTIVE;
-				if (snd_mixer_selem_is_active(controls[i].elem))
-					controls[i].flags |= IS_ACTIVE;
-			}
+		if (mask & SND_CTL_EVENT_MASK_INFO)
+			controls_changed = TRUE;
+	}
 
 	return 0;
 }
diff --git a/alsamixer/mixer_widget.h b/alsamixer/mixer_widget.h
index da8628e..086611c 100644
--- a/alsamixer/mixer_widget.h
+++ b/alsamixer/mixer_widget.h
@@ -24,6 +24,7 @@ extern int focus_control_index;
 extern snd_mixer_selem_id_t *current_selem_id;
 extern unsigned int current_control_flags;
 
+extern bool control_values_changed;
 extern bool controls_changed;
 
 void create_mixer_object(struct snd_mixer_selem_regopt *selem_regopt);
-- 
1.9.3


From 823e50b0f1b7b7a681f55334fc08fa2ba09d8ce8 Mon Sep 17 00:00:00 2001
From: Fabio Estevam <fabio.estevam@freescale.com>
Date: Tue, 13 Nov 2012 10:05:39 -0200
Subject: [PATCH 03/24] aplay: Show usage if no parameter is passed

When aplay/arecord are called without any argument the application hangs forever.

Instead of hanging, print the usage and exit.

Signed-off-by: Fabio Estevam <fabio.estevam@freescale.com>
Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 aplay/aplay.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/aplay/aplay.c b/aplay/aplay.c
index 17fa913..6cbe302 100644
--- a/aplay/aplay.c
+++ b/aplay/aplay.c
@@ -475,6 +475,7 @@ int main(int argc, char *argv[])
 	int tmp, err, c;
 	int do_device_list = 0, do_pcm_list = 0;
 	snd_pcm_info_t *info;
+	FILE *direction;
 
 #ifdef ENABLE_NLS
 	setlocale(LC_ALL, "");
@@ -493,14 +494,21 @@ int main(int argc, char *argv[])
 		file_type = FORMAT_WAVE;
 		command = "arecord";
 		start_delay = 1;
+		direction = stdout;
 	} else if (strstr(argv[0], "aplay")) {
 		stream = SND_PCM_STREAM_PLAYBACK;
 		command = "aplay";
+		direction = stdin;
 	} else {
 		error(_("command should be named either arecord or aplay"));
 		return 1;
 	}
 
+	if (isatty(fileno(direction)) && (argc == 1)) {
+		usage(command);
+		return 1;
+	}
+
 	chunk_size = -1;
 	rhwparams.format = DEFAULT_FORMAT;
 	rhwparams.rate = DEFAULT_SPEED;
-- 
1.9.3


From f263e8d4b3d42781985a05bb19958a542f0ad8c2 Mon Sep 17 00:00:00 2001
From: Clemens Ladisch <clemens@ladisch.de>
Date: Tue, 13 Nov 2012 21:54:20 +0100
Subject: [PATCH 04/24] amixer: fix rounding of relative changes

When doing control changes by a relative amount, amixer used the wrong
rounding direction, which would make it possible to stay at the same raw
value if the step was not big enough to reach the next value.

Reported-by: Honza Javorek <jan.javorek@gmail.com>
Signed-off-by: Clemens Ladisch <clemens@ladisch.de>
---
 amixer/amixer.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/amixer/amixer.c b/amixer/amixer.c
index a0a7387..48ed1b2 100644
--- a/amixer/amixer.c
+++ b/amixer/amixer.c
@@ -425,10 +425,10 @@ static int set_volume_simple(snd_mixer_elem_t *elem,
 				invalid = 1;
 			if (*p == '+') {
 				val = orig + val;
-				correct = -1;
+				correct = 1;
 			} else {
 				val = orig - val;
-				correct = 1;
+				correct = -1;
 			}
 		}
 		p++;
-- 
1.9.3


From ee325bcb2cd5fc6df797ef30da72f53e89a832c3 Mon Sep 17 00:00:00 2001
From: Takashi Iwai <tiwai@suse.de>
Date: Mon, 26 Nov 2012 16:13:57 +0100
Subject: [PATCH 05/24] amixer: Fix parsing container TLV entries

Fix the wrong calculation of the size of a container TLV entry, which
resulted in "TLV size error" messages.

Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 amixer/amixer.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/amixer/amixer.c b/amixer/amixer.c
index 48ed1b2..5d5afce 100644
--- a/amixer/amixer.c
+++ b/amixer/amixer.c
@@ -531,7 +531,7 @@ static void decode_tlv(unsigned int spaces, unsigned int *tlv, unsigned int tlv_
 				printf("TLV size error in compound!\n");
 				return;
 			}
-			decode_tlv(spaces + 2, tlv + idx, tlv[idx+1]);
+			decode_tlv(spaces + 2, tlv + idx, tlv[idx+1] + 8);
 			idx += 2 + (tlv[1] + sizeof(unsigned int) - 1) / sizeof(unsigned int);
 		}
 		break;
-- 
1.9.3


From d5f20d7bca6bea509a152b25c2b81c3a4acafde6 Mon Sep 17 00:00:00 2001
From: Takashi Iwai <tiwai@suse.de>
Date: Thu, 13 Dec 2012 10:53:19 +0100
Subject: [PATCH 06/24] aplay: Add the support for big-endian WAV format (RIFX)

Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 aplay/aplay.c   | 95 +++++++++++++++++++++++++++++++++++++++------------------
 aplay/formats.h |  7 +++++
 2 files changed, 73 insertions(+), 29 deletions(-)

diff --git a/aplay/aplay.c b/aplay/aplay.c
index 6cbe302..45550a6 100644
--- a/aplay/aplay.c
+++ b/aplay/aplay.c
@@ -865,11 +865,20 @@ static ssize_t test_wavefile(int fd, u_char *_buffer, size_t size)
 	WaveFmtBody *f;
 	WaveChunkHeader *c;
 	u_int type, len;
+	unsigned short format, channels;
+	int big_endian, native_format;
 
 	if (size < sizeof(WaveHeader))
 		return -1;
-	if (h->magic != WAV_RIFF || h->type != WAV_WAVE)
+	if (h->magic == WAV_RIFF)
+		big_endian = 0;
+	else if (h->magic == WAV_RIFX)
+		big_endian = 1;
+	else
+		return -1;
+	if (h->type != WAV_WAVE)
 		return -1;
+
 	if (size > sizeof(WaveHeader)) {
 		check_wavefile_space(buffer, size - sizeof(WaveHeader), blimit);
 		memcpy(buffer, _buffer + sizeof(WaveHeader), size - sizeof(WaveHeader));
@@ -880,7 +889,7 @@ static ssize_t test_wavefile(int fd, u_char *_buffer, size_t size)
 		test_wavefile_read(fd, buffer, &size, sizeof(WaveChunkHeader), __LINE__);
 		c = (WaveChunkHeader*)buffer;
 		type = c->type;
-		len = LE_INT(c->length);
+		len = TO_CPU_INT(c->length, big_endian);
 		len += len % 2;
 		if (size > sizeof(WaveChunkHeader))
 			memmove(buffer, buffer + sizeof(WaveChunkHeader), size - sizeof(WaveChunkHeader));
@@ -902,7 +911,8 @@ static ssize_t test_wavefile(int fd, u_char *_buffer, size_t size)
 	check_wavefile_space(buffer, len, blimit);
 	test_wavefile_read(fd, buffer, &size, len, __LINE__);
 	f = (WaveFmtBody*) buffer;
-	if (LE_SHORT(f->format) == WAV_FMT_EXTENSIBLE) {
+	format = TO_CPU_SHORT(f->format, big_endian);
+	if (format == WAV_FMT_EXTENSIBLE) {
 		WaveFmtExtensibleBody *fe = (WaveFmtExtensibleBody*)buffer;
 		if (len < sizeof(WaveFmtExtensibleBody)) {
 			error(_("unknown length of extensible 'fmt ' chunk (read %u, should be %u at least)"),
@@ -913,19 +923,20 @@ static ssize_t test_wavefile(int fd, u_char *_buffer, size_t size)
 			error(_("wrong format tag in extensible 'fmt ' chunk"));
 			prg_exit(EXIT_FAILURE);
 		}
-		f->format = fe->guid_format;
+		format = TO_CPU_SHORT(fe->guid_format, big_endian);
 	}
-        if (LE_SHORT(f->format) != WAV_FMT_PCM &&
-            LE_SHORT(f->format) != WAV_FMT_IEEE_FLOAT) {
-                error(_("can't play WAVE-file format 0x%04x which is not PCM or FLOAT encoded"), LE_SHORT(f->format));
+	if (format != WAV_FMT_PCM &&
+	    format != WAV_FMT_IEEE_FLOAT) {
+                error(_("can't play WAVE-file format 0x%04x which is not PCM or FLOAT encoded"), format);
 		prg_exit(EXIT_FAILURE);
 	}
-	if (LE_SHORT(f->channels) < 1) {
-		error(_("can't play WAVE-files with %d tracks"), LE_SHORT(f->channels));
+	channels = TO_CPU_SHORT(f->channels, big_endian);
+	if (channels < 1) {
+		error(_("can't play WAVE-files with %d tracks"), channels);
 		prg_exit(EXIT_FAILURE);
 	}
-	hwparams.channels = LE_SHORT(f->channels);
-	switch (LE_SHORT(f->bit_p_spl)) {
+	hwparams.channels = channels;
+	switch (TO_CPU_SHORT(f->bit_p_spl, big_endian)) {
 	case 8:
 		if (hwparams.format != DEFAULT_FORMAT &&
 		    hwparams.format != SND_PCM_FORMAT_U8)
@@ -933,43 +944,69 @@ static ssize_t test_wavefile(int fd, u_char *_buffer, size_t size)
 		hwparams.format = SND_PCM_FORMAT_U8;
 		break;
 	case 16:
+		if (big_endian)
+			native_format = SND_PCM_FORMAT_S16_BE;
+		else
+			native_format = SND_PCM_FORMAT_S16_LE;
 		if (hwparams.format != DEFAULT_FORMAT &&
-		    hwparams.format != SND_PCM_FORMAT_S16_LE)
-			fprintf(stderr, _("Warning: format is changed to S16_LE\n"));
-		hwparams.format = SND_PCM_FORMAT_S16_LE;
+		    hwparams.format != native_format)
+			fprintf(stderr, _("Warning: format is changed to %s\n"),
+				snd_pcm_format_name(native_format));
+		hwparams.format = native_format;
 		break;
 	case 24:
-		switch (LE_SHORT(f->byte_p_spl) / hwparams.channels) {
+		switch (TO_CPU_SHORT(f->byte_p_spl, big_endian) / hwparams.channels) {
 		case 3:
+			if (big_endian)
+				native_format = SND_PCM_FORMAT_S24_3BE;
+			else
+				native_format = SND_PCM_FORMAT_S24_3LE;
 			if (hwparams.format != DEFAULT_FORMAT &&
-			    hwparams.format != SND_PCM_FORMAT_S24_3LE)
-				fprintf(stderr, _("Warning: format is changed to S24_3LE\n"));
-			hwparams.format = SND_PCM_FORMAT_S24_3LE;
+			    hwparams.format != native_format)
+				fprintf(stderr, _("Warning: format is changed to %s\n"),
+					snd_pcm_format_name(native_format));
+			hwparams.format = native_format;
 			break;
 		case 4:
+			if (big_endian)
+				native_format = SND_PCM_FORMAT_S24_BE;
+			else
+				native_format = SND_PCM_FORMAT_S24_LE;
 			if (hwparams.format != DEFAULT_FORMAT &&
-			    hwparams.format != SND_PCM_FORMAT_S24_LE)
-				fprintf(stderr, _("Warning: format is changed to S24_LE\n"));
-			hwparams.format = SND_PCM_FORMAT_S24_LE;
+			    hwparams.format != native_format)
+				fprintf(stderr, _("Warning: format is changed to %s\n"),
+					snd_pcm_format_name(native_format));
+			hwparams.format = native_format;
 			break;
 		default:
 			error(_(" can't play WAVE-files with sample %d bits in %d bytes wide (%d channels)"),
-			      LE_SHORT(f->bit_p_spl), LE_SHORT(f->byte_p_spl), hwparams.channels);
+			      TO_CPU_SHORT(f->bit_p_spl, big_endian),
+			      TO_CPU_SHORT(f->byte_p_spl, big_endian),
+			      hwparams.channels);
 			prg_exit(EXIT_FAILURE);
 		}
 		break;
 	case 32:
-                if (LE_SHORT(f->format) == WAV_FMT_PCM)
-                        hwparams.format = SND_PCM_FORMAT_S32_LE;
-                else if (LE_SHORT(f->format) == WAV_FMT_IEEE_FLOAT)
-                        hwparams.format = SND_PCM_FORMAT_FLOAT_LE;
+		if (format == WAV_FMT_PCM) {
+			if (big_endian)
+				native_format = SND_PCM_FORMAT_S32_BE;
+			else
+				native_format = SND_PCM_FORMAT_S32_LE;
+                        hwparams.format = native_format;
+		} else if (format == WAV_FMT_IEEE_FLOAT) {
+			if (big_endian)
+				native_format = SND_PCM_FORMAT_FLOAT_BE;
+			else
+				native_format = SND_PCM_FORMAT_FLOAT_LE;
+			hwparams.format = native_format;
+		}
 		break;
 	default:
 		error(_(" can't play WAVE-files with sample %d bits wide"),
-		      LE_SHORT(f->bit_p_spl));
+		      TO_CPU_SHORT(f->bit_p_spl, big_endian));
 		prg_exit(EXIT_FAILURE);
 	}
-	hwparams.rate = LE_INT(f->sample_fq);
+	hwparams.rate = TO_CPU_INT(f->sample_fq, big_endian);
 	
 	if (size > len)
 		memmove(buffer, buffer + len, size - len);
@@ -982,7 +1019,7 @@ static ssize_t test_wavefile(int fd, u_char *_buffer, size_t size)
 		test_wavefile_read(fd, buffer, &size, sizeof(WaveChunkHeader), __LINE__);
 		c = (WaveChunkHeader*)buffer;
 		type = c->type;
-		len = LE_INT(c->length);
+		len = TO_CPU_INT(c->length, big_endian);
 		if (size > sizeof(WaveChunkHeader))
 			memmove(buffer, buffer + sizeof(WaveChunkHeader), size - sizeof(WaveChunkHeader));
 		size -= sizeof(WaveChunkHeader);
diff --git a/aplay/formats.h b/aplay/formats.h
index b5314f9..ac0a2b0 100644
--- a/aplay/formats.h
+++ b/aplay/formats.h
@@ -60,7 +60,14 @@ typedef struct voc_ext_block {
 #error "Wrong endian"
 #endif
 
+/* Note: the following macros evaluate the parameter v twice */
+#define TO_CPU_SHORT(v, be) \
+	((be) ? BE_SHORT(v) : LE_SHORT(v))
+#define TO_CPU_INT(v, be) \
+	((be) ? BE_INT(v) : LE_INT(v))
+
 #define WAV_RIFF		COMPOSE_ID('R','I','F','F')
+#define WAV_RIFX		COMPOSE_ID('R','I','F','X')
 #define WAV_WAVE		COMPOSE_ID('W','A','V','E')
 #define WAV_FMT			COMPOSE_ID('f','m','t',' ')
 #define WAV_DATA		COMPOSE_ID('d','a','t','a')
-- 
1.9.3


From a88f8ad1a3a5cc9d29f104bab437ac04494ef91a Mon Sep 17 00:00:00 2001
From: Antonio Ospite <ao2@amarulasolutions.com>
Date: Wed, 16 Jan 2013 17:06:04 +0100
Subject: [PATCH 07/24] speaker-test: increase the maximum supported rate to
 384000

There are some devices around supporting this sample rate so let's make
speaker-test capable to deal with them.

Signed-off-by: Antonio Ospite <ao2@amarulasolutions.com>
Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 speaker-test/speaker-test.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/speaker-test/speaker-test.c b/speaker-test/speaker-test.c
index 3029110..153732b 100644
--- a/speaker-test/speaker-test.c
+++ b/speaker-test/speaker-test.c
@@ -895,7 +895,7 @@ int main(int argc, char *argv[]) {
     case 'r':
       rate = atoi(optarg);
       rate = rate < 4000 ? 4000 : rate;
-      rate = rate > 196000 ? 196000 : rate;
+      rate = rate > 384000 ? 384000 : rate;
       break;
     case 'c':
       channels = atoi(optarg);
-- 
1.9.3


From fa13f8c7cf02a4bc6f59e671221baa425dd202ef Mon Sep 17 00:00:00 2001
From: Takashi Iwai <tiwai@suse.de>
Date: Thu, 31 Jan 2013 17:47:50 +0100
Subject: [PATCH 08/24] amixer: Fix dB value outputs in amixer contents

Add missing cast to signed int for DB_MINMAX* types.

Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 amixer/amixer.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/amixer/amixer.c b/amixer/amixer.c
index 5d5afce..c7c879d 100644
--- a/amixer/amixer.c
+++ b/amixer/amixer.c
@@ -560,9 +560,9 @@ static void decode_tlv(unsigned int spaces, unsigned int *tlv, unsigned int tlv_
 			}
 		} else {
 			printf("min=");
-			print_dB(tlv[2]);
+			print_dB((int)tlv[2]);
 			printf(",max=");
-			print_dB(tlv[3]);
+			print_dB((int)tlv[3]);
 		}
 		break;
 #endif
@@ -600,9 +600,9 @@ static void decode_tlv(unsigned int spaces, unsigned int *tlv, unsigned int tlv_
 			}
 		} else {
 			printf("min=");
-			print_dB(tlv[2]);
+			print_dB((int)tlv[2]);
 			printf(",max=");
-			print_dB(tlv[3]);
+			print_dB((int)tlv[3]);
 		}
 		break;
 #endif
-- 
1.9.3


From 9c0e1ab825dd79b3e7275f59faa868a4a66d6fce Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <perex@perex.cz>
Date: Fri, 22 Mar 2013 13:27:26 +0100
Subject: [PATCH 09/24] alsamixer: Use isatty() to check the terminal
 (interactive) availability

Signed-off-by: Jaroslav Kysela <perex@perex.cz>
---
 alsamixer/cli.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/alsamixer/cli.c b/alsamixer/cli.c
index bb4f030..3f8f52f 100644
--- a/alsamixer/cli.c
+++ b/alsamixer/cli.c
@@ -115,6 +115,9 @@ fail:
 
 int main(int argc, char *argv[])
 {
+	if (!isatty(fileno(stdin)))
+		return 0;
+
 	setlocale(LC_ALL, "");
 #ifdef ENABLE_NLS_IN_CURSES
 	textdomain(PACKAGE);
-- 
1.9.3


From e137ce418d1bea2a5f84fe64367baa19b100a9cc Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <perex@perex.cz>
Date: Fri, 22 Mar 2013 13:21:25 +0100
Subject: [PATCH 10/24] aplay/arecord: added isatty() check (interactive mode)

Turn off the interactive mode when stdin is not a tty.

Signed-off-by: Jaroslav Kysela <perex@perex.cz>
---
 aplay/aplay.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/aplay/aplay.c b/aplay/aplay.c
index 45550a6..ea6f4eb 100644
--- a/aplay/aplay.c
+++ b/aplay/aplay.c
@@ -1296,6 +1296,10 @@ static void init_stdin(void)
 
 	if (!interactive)
 		return;
+	if (!isatty(fileno(stdin))) {
+		interactive = 0;
+		return;
+	}
 	tcgetattr(fileno(stdin), &term);
 	term_c_lflag = term.c_lflag;
 	if (fd == fileno(stdin))
-- 
1.9.3


From 6664e4e8c3b63f18585d02609d42ce3c5db7dd09 Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <perex@perex.cz>
Date: Wed, 3 Apr 2013 11:13:41 +0200
Subject: [PATCH 11/24] alsactl: safe state store and memory allocation
 cleanups

- store new configuration to file + ".new" extension, rename later
- free the configuration tree on exit from load_state()/save_state()
- call snd_config_update_free_global() at the end of command blocks

Signed-off-by: Jaroslav Kysela <perex@perex.cz>
---
 alsactl/alsactl.c |  1 +
 alsactl/state.c   | 74 ++++++++++++++++++++++++++++++++++++++++---------------
 2 files changed, 55 insertions(+), 20 deletions(-)

diff --git a/alsactl/alsactl.c b/alsactl/alsactl.c
index 54af3bf..d61a7da 100644
--- a/alsactl/alsactl.c
+++ b/alsactl/alsactl.c
@@ -174,6 +174,7 @@ int main(int argc, char *argv[])
 
 	if (!strcmp(argv[optind], "init")) {
 		res = init(initfile, cardname);
+		snd_config_update_free_global();
 	} else if (!strcmp(argv[optind], "store")) {
 		res = save_state(cfgfile, cardname);
 	} else if (!strcmp(argv[optind], "restore")) {
diff --git a/alsactl/state.c b/alsactl/state.c
index fec000d..1eab02e 100644
--- a/alsactl/state.c
+++ b/alsactl/state.c
@@ -1546,6 +1546,7 @@ int save_state(const char *file, const char *cardname)
 	snd_input_t *in;
 	snd_output_t *out;
 	int stdio;
+	char *nfile = NULL;
 
 	err = snd_config_top(&config);
 	if (err < 0) {
@@ -1553,13 +1554,22 @@ int save_state(const char *file, const char *cardname)
 		return err;
 	}
 	stdio = !strcmp(file, "-");
+	if (!stdio) {
+		nfile = malloc(strlen(file) + 5);
+		if (nfile == NULL) {
+			error("No enough memory...");
+			goto out;
+		}
+		strcpy(nfile, file);
+		strcat(nfile, ".new");
+	}
 	if (!stdio && (err = snd_input_stdio_open(&in, file, "r")) >= 0) {
 		err = snd_config_load(config, in);
 		snd_input_close(in);
 #if 0
 		if (err < 0) {
 			error("snd_config_load error: %s", snd_strerror(err));
-			return err;
+			goto out;
 		}
 #endif
 	}
@@ -1575,17 +1585,19 @@ int save_state(const char *file, const char *cardname)
 			if (card < 0) {
 				if (first) {
 					if (ignore_nocards) {
-						return 0;
+						err = 0;
+						goto out;
 					} else {
 						error("No soundcards found...");
-						return -ENODEV;
+						err = -ENODEV;
+						goto out;
 					}
 				}
 				break;
 			}
 			first = 0;
 			if ((err = get_controls(card, config)))
-				return err;
+				goto out;
 		}
 	} else {
 		int cardno;
@@ -1593,26 +1605,39 @@ int save_state(const char *file, const char *cardname)
 		cardno = snd_card_get_index(cardname);
 		if (cardno < 0) {
 			error("Cannot find soundcard '%s'...", cardname);
-			return cardno;
+			err = cardno;
+			goto out;
 		}
 		if ((err = get_controls(cardno, config))) {
-			return err;
+			goto out;
 		}
 	}
 	
-	if (stdio)
+	if (stdio) {
 		err = snd_output_stdio_attach(&out, stdout, 0);
-	else
-		err = snd_output_stdio_open(&out, file, "w");
+	} else {
+		err = snd_output_stdio_open(&out, nfile, "w");
+	}
 	if (err < 0) {
 		error("Cannot open %s for writing: %s", file, snd_strerror(err));
-		return -errno;
+		err = -errno;
+		goto out;
 	}
 	err = snd_config_save(config, out);
 	snd_output_close(out);
-	if (err < 0)
+	if (err < 0) {
 		error("snd_config_save: %s", snd_strerror(err));
-	return 0;
+	} else {
+		//unlink(file);
+		err = rename(nfile, file);
+		if (err < 0)
+			error("rename failed: %s (%s)", strerror(-err), file);
+	}
+out:
+	free(nfile);
+	snd_config_delete(config);
+	snd_config_update_free_global();
+	return err;
 }
 
 int load_state(const char *file, const char *initfile, const char *cardname,
@@ -1638,7 +1663,7 @@ int load_state(const char *file, const char *initfile, const char *cardname,
 		snd_input_close(in);
 		if (err < 0) {
 			error("snd_config_load error: %s", snd_strerror(err));
-			return err;
+			goto out;
 		}
 	} else {
 		int card, first = 1;
@@ -1650,7 +1675,8 @@ int load_state(const char *file, const char *initfile, const char *cardname,
 			card = snd_card_get_index(cardname);
 			if (card < 0) {
 				error("Cannot find soundcard '%s'...", cardname);
-				return -ENODEV;
+				err = -ENODEV;
+				goto out;
 			}
 			goto single;
 		} else {
@@ -1676,7 +1702,8 @@ single:
 		}
 		if (first)
 			finalerr = 0;	/* no cards, no error code */
-		return finalerr;
+		err = finalerr;
+		goto out;
 	}
 
 	if (!cardname) {
@@ -1691,10 +1718,12 @@ single:
 			if (card < 0) {
 				if (first) {
 					if (ignore_nocards) {
-						return 0;
+						err = 0;
+						goto out;
 					} else {
 						error("No soundcards found...");
-						return -ENODEV;
+						err = -ENODEV;
+						goto out;
 					}
 				}
 				break;
@@ -1721,7 +1750,8 @@ single:
 		cardno = snd_card_get_index(cardname);
 		if (cardno < 0) {
 			error("Cannot find soundcard '%s'...", cardname);
-			return -ENODEV;
+			err = -ENODEV;
+			goto out;
 		}
 		/* do a check if controls matches state file */
 		if (do_init && set_controls(cardno, config, 0)) {
@@ -1734,8 +1764,12 @@ single:
 		if ((err = set_controls(cardno, config, 1))) {
 			initfailed(cardno, "restore", err);
 			if (!force_restore)
-				return err;
+				goto out;
 		}
 	}
-	return finalerr;
+	err = finalerr;
+out:
+	snd_config_delete(config);
+	snd_config_update_free_global();
+	return err;
 }
-- 
1.9.3


From 1969e1fadbc53175c8f4d592d834a2ac27802715 Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <perex@perex.cz>
Date: Wed, 3 Apr 2013 11:57:52 +0200
Subject: [PATCH 12/24] alsactl: small code reorder to avoid memory leaks

Signed-off-by: Jaroslav Kysela <perex@perex.cz>
---
 alsactl/state.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/alsactl/state.c b/alsactl/state.c
index 1eab02e..8b309ba 100644
--- a/alsactl/state.c
+++ b/alsactl/state.c
@@ -185,11 +185,11 @@ static int add_tlv_comments(snd_ctl_t *handle, snd_ctl_elem_id_t *id,
 		char *s = tlv_to_str(tlv);
 		if (s) {
 			err = snd_config_string_add(comment, "tlv", s);
+			free(s);
 			if (err < 0) {
 				error("snd_config_string_add: %s", snd_strerror(err));
 				return err;
 			}
-			free(s);
 		}
 	}
 
-- 
1.9.3


From a175b40fd6eec977fe076c7d802d5f8f5bd49ff5 Mon Sep 17 00:00:00 2001
From: Elimar Riesebieter <riesebie@lxtec.de>
Date: Wed, 15 May 2013 19:12:54 +0200
Subject: [PATCH 14/24] Fix several typos in manpage and help strings.

Signed-off-by: Jordi Mallach <jordi@debian.org>
Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 aplay/aplay.c               | 2 +-
 iecset/iecbits.c            | 2 +-
 seq/aseqnet/aseqnet.c       | 2 +-
 speaker-test/speaker-test.1 | 2 +-
 4 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/aplay/aplay.c b/aplay/aplay.c
index 2a808a4..f6bc574 100644
--- a/aplay/aplay.c
+++ b/aplay/aplay.c
@@ -236,7 +236,7 @@ _("Usage: %s [OPTION]... [FILE]...\n"
 			printf(" %s", s);
 	}
 	printf(_("\nSome of these may not be available on selected hardware\n"));
-	printf(_("The availabled format shortcuts are:\n"));
+	printf(_("The available format shortcuts are:\n"));
 	printf(_("-f cd (16 bit little endian, 44100, stereo)\n"));
 	printf(_("-f cdr (16 bit big endian, 44100, stereo)\n"));
 	printf(_("-f dat (16 bit little endian, 48000, stereo)\n"));
diff --git a/iecset/iecbits.c b/iecset/iecbits.c
index edea932..13e8947 100644
--- a/iecset/iecbits.c
+++ b/iecset/iecbits.c
@@ -218,7 +218,7 @@ void dump_iec958(snd_aes_iec958_t *iec)
 			printf("user-defined\n");
 			break;
 		default:
-			printf("unkown\n");
+			printf("unknown\n");
 			break;
 		}
 		printf("Sample Bits: ");
diff --git a/seq/aseqnet/aseqnet.c b/seq/aseqnet/aseqnet.c
index e071ad9..70a1cfd 100644
--- a/seq/aseqnet/aseqnet.c
+++ b/seq/aseqnet/aseqnet.c
@@ -167,7 +167,7 @@ static void usage(void)
 	printf(_("  server mode: aseqnet [-options]\n"));
 	printf(_("  client mode: aseqnet [-options] server_host\n"));
 	printf(_("options:\n"));
-	printf(_("  -p,--port # : sepcify TCP port (digit or service name)\n"));
+	printf(_("  -p,--port # : specify TCP port (digit or service name)\n"));
 	printf(_("  -s,--source addr : read from given addr (client:port)\n"));
 	printf(_("  -d,--dest addr : write to given addr (client:port)\n"));
 	printf(_("  -v, --verbose : print verbose messages\n"));
diff --git a/speaker-test/speaker-test.1 b/speaker-test/speaker-test.1
index 6ef0814..a8b9e22 100644
--- a/speaker-test/speaker-test.1
+++ b/speaker-test/speaker-test.1
@@ -86,7 +86,7 @@ When 0 is given, the periods given by \fB\-P\fP option is used.
 The default value is 0.
 
 .TP
-\fB\-P\fP | \fB\-\-nperiods\fP \fPERIODS\fP
+\fB\-P\fP | \fB\-\-nperiods\fP \fPPERIODS\fP
 Use number of periods.  The default value is 4.
 
 .TP
-- 
1.9.3


From c5c28e029ca40189c03b230437d78605e9e19895 Mon Sep 17 00:00:00 2001
From: Jordi Mallach <jordi@debian.org>
Date: Wed, 15 May 2013 19:12:55 +0200
Subject: [PATCH 15/24] Several formatting fixes for manpages.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Fix many occurrences of unescaped “-”.
Fix minor English issue.

Signed-off-by: Jordi Mallach <jordi@debian.org>
Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 amidi/amidi.1               |  4 ++--
 amixer/amixer.1             | 10 +++++-----
 aplay/aplay.1               | 28 ++++++++++++++--------------
 speaker-test/speaker-test.1 | 27 +++++++++++++--------------
 4 files changed, 34 insertions(+), 35 deletions(-)

diff --git a/amidi/amidi.1 b/amidi/amidi.1
index c58d65c..1b4cfb1 100644
--- a/amidi/amidi.1
+++ b/amidi/amidi.1
@@ -9,7 +9,7 @@ amidi \- read from and write to ALSA RawMIDI ports
 
 .SH DESCRIPTION
 .B amidi
-is a command-line utility which allows to receive and send
+is a command-line utility which allows one to receive and send
 SysEx (system exclusive) data from/to external MIDI devices.
 It can also send any other MIDI commands.
 
@@ -141,7 +141,7 @@ creates a virtual RawMIDI port and prints all data sent to this port.
 default rawmidi definitions
 .br
 .I /etc/asound.conf
-system-wide rawmidi definitions
+system\-wide rawmidi definitions
 .br
 .I ~/.asoundrc
 user specific rawmidi definitions
diff --git a/amixer/amixer.1 b/amixer/amixer.1
index 3ed20a9..76007d2 100644
--- a/amixer/amixer.1
+++ b/amixer/amixer.1
@@ -4,7 +4,7 @@ amixer \- command-line mixer for ALSA soundcard driver
 .SH SYNOPSIS
 \fBamixer\fP [\fI\-option\fP] [\fIcmd\fP]
 .SH DESCRIPTION
-\fBamixer\fP allows command-line control of the mixer for the ALSA
+\fBamixer\fP allows command\-line control of the mixer for the ALSA
 soundcard driver.
 \fBamixer\fP supports multiple soundcards.
 
@@ -34,7 +34,7 @@ Shows a complete list of simple mixer controls with their contents.
 \fIset\fP or \fIsset\fP <\fISCONTROL\fP> <\fIPARAMETER\fP> ...
 Sets the simple mixer control contents. The parameter can be the volume
 either as a percentage from 0% to 100% with \fI%\fP suffix,
-a dB gain with \fIdB\fP suffix (like -12.5dB), or an exact hardware value.
+a dB gain with \fIdB\fP suffix (like \-12.5dB), or an exact hardware value.
 The dB gain can be used only for the mixer elements with available
 dB information.
 When plus(+) or minus(\-) letter is appended after
@@ -96,7 +96,7 @@ Select the device name to control. The default control name is 'default'.
 \fI\-s\fP | \fI\-\-stdin\fP
 
 Read from stdin and execute the command on each line sequentially.
-When this option is given, the command in command-line arguments is ignored.
+When this option is given, the command in command\-line arguments is ignored.
 
 Only sset and cset are accepted.  Other commands are ignored.
 The commands to unmatched ids are ignored without errors too.
@@ -128,8 +128,8 @@ right line input to 40%, unmute it, and select it as a source for
 capture (recording).\fR
 
 .TP
-\fBamixer \-c 1 \-\- sset Master playback -20dB\fR
-will set the master volume of the second card to -20dB.  If the master
+\fBamixer \-c 1 \-\- sset Master playback \-20dB\fR
+will set the master volume of the second card to \-20dB.  If the master
 has multiple channels, all channels are set to the same value.
 
 .TP
diff --git a/aplay/aplay.1 b/aplay/aplay.1
index bf9b53e..1a76e21 100644
--- a/aplay/aplay.1
+++ b/aplay/aplay.1
@@ -1,6 +1,6 @@
 .TH APLAY 1 "1 January 2010"
 .SH NAME
-arecord, aplay \- command-line sound recorder and player for ALSA 
+arecord, aplay \- command\-line sound recorder and player for ALSA 
 soundcard driver
 .SH SYNOPSIS
 \fBarecord\fP [\fIflags\fP] [filename]
@@ -8,7 +8,7 @@ soundcard driver
 \fBaplay\fP [\fIflags\fP] [filename [filename]] ...
 
 .SH DESCRIPTION
-\fBarecord\fP is a command-line soundfile recorder for the ALSA soundcard
+\fBarecord\fP is a command\-line soundfile recorder for the ALSA soundcard
 driver. It supports several file formats and multiple soundcards with
 multiple devices. If recording with interleaved mode samples the file is
 automatically split before the 2GB filesize.
@@ -81,11 +81,11 @@ The default is zero, so if this option is omitted then the arecord process will
 Min ticks to sleep. The default is not to sleep.
 .TP
 \fI\-M, \-\-mmap\fP            
-Use memory-mapped (mmap) I/O mode for the audio stream.
+Use memory\-mapped (mmap) I/O mode for the audio stream.
 If this option is not set, the read/write I/O mode will be used.
 .TP
 \fI\-N, \-\-nonblock\fP          
-Open the audio device in non-blocking mode. If the device is busy the program will exit immediately.
+Open the audio device in non\-blocking mode. If the device is busy the program will exit immediately.
 If this option is not set the program will block until the audio device is available again.
 .TP
 \fI\-F, \-\-period\-time=#\fP     
@@ -120,8 +120,8 @@ This option is accumulative.  The VU meter is displayed when this
 is given twice or three times.
 .TP
 \fI\-V, \-\-vumeter=TYPE\fP
-Specifies the VU-meter type, either \fIstereo\fP or \fImono\fP.
-The stereo VU-meter is available only for 2-channel stereo samples
+Specifies the VU\-meter type, either \fIstereo\fP or \fImono\fP.
+The stereo VU\-meter is available only for 2\-channel stereo samples
 with interleaved format.
 .TP
 \fI\-I, \-\-separate\-channels\fP 
@@ -162,7 +162,7 @@ Expression for validation is: coef * (buffer_size / 2).
 Minimum value is 1.
 .TP
 \fI\-\-test\-nowait\fP
-Do not wait for the ring buffer--eats the whole CPU.
+Do not wait for the ring buffer \(hy eats the whole CPU.
 .TP
 \fI\-\-max\-file\-time\fP
 While recording, when the output file has been accumulating
@@ -177,7 +177,7 @@ aplay writes its process ID here, so other programs can
 send signals to it.
 .TP
 \fI\-\-use\-strftime\fP
-When recording, interpret %-codes in the file name parameter using
+When recording, interpret %\-codes in the file name parameter using
 the strftime facility whenever the output file is opened.  The
 important strftime codes are: %Y is the year, %m month, %d day of
 the month, %H hour, %M minute and %S second.  In addition, %v is
@@ -207,11 +207,11 @@ and continue recording.  However, SIGUSR1 does not work with
 .TP
 \fBaplay \-c 1 \-t raw \-r 22050 \-f mu_law foobar\fR
 will play the raw file "foobar" as a
-22050-Hz, mono, 8-bit, Mu-Law .au file. 
+22050\-Hz, mono, 8\-bit, Mu\-Law .au file. 
 
 .TP
 \fBarecord \-d 10 \-f cd \-t wav \-D copy foobar.wav\fP
-will record foobar.wav as a 10-second, CD-quality wave file, using the
+will record foobar.wav as a 10\-second, CD\-quality wave file, using the
 PCM "copy" (which might be defined in the user's .asoundrc file as:
 .nf
 pcm.copy {
@@ -224,14 +224,14 @@ pcm.copy {
 .fi
 
 .TP
-\fBarecord \-t wav \-\-max-file-time 30 mon.wav\fP
+\fBarecord \-t wav \-\-max\-file\-time 30 mon.wav\fP
 Record from the default audio source in monaural, 8,000 samples
 per second, 8 bits per sample.  Start a new file every
-30 seconds.  File names are mon-nn.wav, where nn increases
-from 01.  The file after mon-99.wav is mon-100.wav.
+30 seconds.  File names are mon\-nn.wav, where nn increases
+from 01.  The file after mon\-99.wav is mon\-100.wav.
 
 .TP
-\fBarecord \-f cd \-t wav \-\-max-file-time 3600 --use-strftime %Y/%m/%d/listen-%H-%M-%v.wav\fP
+\fBarecord \-f cd \-t wav \-\-max\-file\-time 3600 \-\-use-strftime %Y/%m/%d/listen-%H-%M-%v.wav\fP
 Record in stereo from the default audio source.  Create a new file
 every hour.  The files are placed in directories based on their start dates
 and have names which include their start times and file numbers.
diff --git a/speaker-test/speaker-test.1 b/speaker-test/speaker-test.1
index a8b9e22..0314a1e 100644
--- a/speaker-test/speaker-test.1
+++ b/speaker-test/speaker-test.1
@@ -11,26 +11,26 @@
 .  fi
 .  PP
 ..
-.TH SPEAKER\-TEST 1 "April 2nd, 2011" speaker-test
+.TH SPEAKER\-TEST 1 "April 2nd, 2011" speaker\-test
 .SH NAME
-speaker\-test \- command-line speaker test tone generator for ALSA 
+speaker\-test \- command\-line speaker test tone generator for ALSA 
 .SH SYNOPSIS
 .B speaker\-test [\-options]
 
 .SH DESCRIPTION
 \fBspeaker\-test\fP generates a tone that can be used to test the speakers of a computer.
 
-\fBspeaker-test\fP by default will test the \fIdefault\fP device. If you
+\fBspeaker\-test\fP by default will test the \fIdefault\fP device. If you
 want to test another sound device you will have first to get a list of
 all of the sound cards in your system and the devices associated with
 those cards. Notice that there might be for example, one device for
 analog sound, one for digital sound and one for HDMI sound.
-To get the list of available cards and devices you can run \fBaplay -L\fR.
+To get the list of available cards and devices you can run \fBaplay \-L\fR.
 
 .P \fBaplay\fR's output will be similar to this one:
 
 .nf
-$ aplay -L
+$ aplay \-L
 null
     Discard all samples (playback) or generate zero samples (capture)
 default:CARD=ICH5
@@ -48,7 +48,7 @@ surround40:CARD=ICH5,DEV=0
 .P Each of the devices is listed in the beginning of the definition so,
 in the above example, there are four devices listed: null, default, front
 and surround40. So, if you want to test the last device you can 
-run \fBspeaker-test -Dsurround40:ICH5 -c 6\fR. The \fB-c\fR option will
+run \fBspeaker\-test \-Dsurround40:ICH5 \-c 6\fR. The \fB\-c\fR option will
 indicate that the six audio channels in the device have to be tested.
 
 
@@ -136,34 +136,33 @@ The default path is \fI/usr/share/sounds/alsa\fP.
 
 Produce stereo sound from one stereo jack:
 .EX
-  speaker-test -Dplug:front -c2
+  speaker\-test \-Dplug:front \-c2
 .EE
 
 Produce 4 speaker sound from two stereo jacks:
 .EX
-  speaker-test -Dplug:surround40 -c4
+  speaker\-test \-Dplug:surround40 \-c4
 .EE
 
 Produce 5.1 speaker sound from three stereo jacks:
 .EX
-  speaker-test -Dplug:surround51 -c6
+  speaker\-test \-Dplug:surround51 \-c6
 .EE
 
 To send a nice low 75Hz tone to the Woofer and then exit without touching any other speakers:
 .EX
-  speaker-test -Dplug:surround51 -c6 -s1 -f75
+  speaker\-test \-Dplug:surround51 \-c6 \-s1 \-f75
 .EE
 
-To do a 2-speaker test using the spdif (coax or optical) output:
+To do a 2\-speaker test using the spdif (coax or optical) output:
 .EX
-  speaker-test -Dplug:spdif -c2
+  speaker\-test \-Dplug:spdif \-c2
 .EE
 
-
 .SH SEE ALSO
 .BR aplay(1)
 
 .SH AUTHOR
-The speaker-test program was written by James Courtier-Dutton.
+The speaker\-test program was written by James Courtier-Dutton.
 Pink noise support was added by Nathan Hurst.
 Further extensions by Takashi Iwai.
-- 
1.9.3


From 1e4e93770edbbab67520754e01a697046445f195 Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <perex@perex.cz>
Date: Tue, 28 May 2013 08:43:30 +0200
Subject: [PATCH 17/24] amixer: fix print_dB for -0.99 .. -0.01 range

The first number is 0 when input dB (hundreds) is in range -99 .. -1 .
The printed number was positive in this case. This patch fixes this issue.

Reported-by: Tom Becker <GTBecker@RighTime.com>
Signed-off-by: Jaroslav Kysela <perex@perex.cz>
---
 amixer/amixer.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/amixer/amixer.c b/amixer/amixer.c
index c7c879d..e08c754 100644
--- a/amixer/amixer.c
+++ b/amixer/amixer.c
@@ -500,7 +500,11 @@ static void print_spaces(unsigned int spaces)
 
 static void print_dB(long dB)
 {
-	printf("%li.%02lidB", dB / 100, (dB < 0 ? -dB : dB) % 100);
+	if (dB < 0) {
+		printf("-%li.%02lidB", -dB / 100, -dB % 100);
+	} else {
+		printf("%li.%02lidB", dB / 100, dB % 100);
+	}
 }
 
 static void decode_tlv(unsigned int spaces, unsigned int *tlv, unsigned int tlv_size)
-- 
1.9.3


From d3b0d5399797d354878977a86c2a66ef9fd6cb2d Mon Sep 17 00:00:00 2001
From: Anssi Hannula <anssi.hannula@iki.fi>
Date: Mon, 30 Sep 2013 23:46:50 +0300
Subject: [PATCH 19/24] amixer: actually print all TLVs in a container TLV

Due to a wrong indexing of tlv[] decode_tlv() always skips to the end of
the container TLV since the used tlv[1] contains the container TLV size
instead of the intended element size.

This causes, for example, only the first HDMI channel map TLV to be
shown.

Fix the indexing to actually use the element size.

Signed-off-by: Anssi Hannula <anssi.hannula@iki.fi>
Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 amixer/amixer.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/amixer/amixer.c b/amixer/amixer.c
index 31896b2..7226979 100644
--- a/amixer/amixer.c
+++ b/amixer/amixer.c
@@ -537,7 +537,7 @@ static void decode_tlv(unsigned int spaces, unsigned int *tlv, unsigned int tlv_
 				return;
 			}
 			decode_tlv(spaces + 2, tlv + idx, tlv[idx+1] + 8);
-			idx += 2 + (tlv[1] + sizeof(unsigned int) - 1) / sizeof(unsigned int);
+			idx += 2 + (tlv[idx+1] + sizeof(unsigned int) - 1) / sizeof(unsigned int);
 		}
 		break;
 	case SND_CTL_TLVT_DB_SCALE:
-- 
1.9.3


From 9e90e0502f8fb1f646a4e05f43f201be315b46ad Mon Sep 17 00:00:00 2001
From: Anssi Hannula <anssi.hannula@iki.fi>
Date: Tue, 1 Oct 2013 23:46:53 +0300
Subject: [PATCH 20/24] amixer: fix indentation when printing container TLV
 contents

decode_tlv() adds indentation in the beginning, with the expectation
that the TLV will be printed on the line afterwards in a switch-case.

However, in the case of a container TLV the switch-case simply adds
another level of indentation and calls decode_tlv() for the inner TLVs.
This causes the first inner TLV to be printed with too much indentation
and double '|'.

Fix that by printing "container" and a newline for container TLVs, so
that the result is as follows:
  : values=0,0,0,0,0,0,0,0
  | container
    | chmap-variable=FL,FR
    | chmap-variable=FL,FR,LFE
    | chmap-variable=FL,FR,FC

Signed-off-by: Anssi Hannula <anssi.hannula@iki.fi>
Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 amixer/amixer.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/amixer/amixer.c b/amixer/amixer.c
index 7226979..47897c6 100644
--- a/amixer/amixer.c
+++ b/amixer/amixer.c
@@ -529,6 +529,7 @@ static void decode_tlv(unsigned int spaces, unsigned int *tlv, unsigned int tlv_
 	}
 	switch (type) {
 	case SND_CTL_TLVT_CONTAINER:
+		printf("container\n");
 		size += sizeof(unsigned int) -1;
 		size /= sizeof(unsigned int);
 		while (idx < size) {
-- 
1.9.3


From 65135b4e7a16fff30aba9ec3874e277780fb25cd Mon Sep 17 00:00:00 2001
From: Olivier Langlois <olivier@trillion01.com>
Date: Tue, 7 Jan 2014 23:18:17 -0500
Subject: [PATCH 21/24] aplay: fix pcm_read() return value

Because of the way the pcm_read() functions are currently used, returning
rcount or result is equivalent but I feel it is more accurate to
return 'result'.

Signed-off-by: Olivier Langlois <olivier@trillion01.com>
Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 aplay/aplay.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/aplay/aplay.c b/aplay/aplay.c
index f6bc574..b21bd89 100644
--- a/aplay/aplay.c
+++ b/aplay/aplay.c
@@ -1885,7 +1885,7 @@ static ssize_t pcm_read(u_char *data, size_t rcount)
 			data += r * bits_per_frame / 8;
 		}
 	}
-	return rcount;
+	return result;
 }
 
 static ssize_t pcm_readv(u_char **data, unsigned int channels, size_t rcount)
@@ -1930,7 +1930,7 @@ static ssize_t pcm_readv(u_char **data, unsigned int channels, size_t rcount)
 			count -= r;
 		}
 	}
-	return rcount;
+	return result;
 }
 
 /*
-- 
1.9.3


From f0289a1dc83e83ef835f98fde5dc51faafc3746f Mon Sep 17 00:00:00 2001
From: Olivier Langlois <olivier@trillion01.com>
Date: Tue, 21 Jan 2014 15:25:12 -0500
Subject: [PATCH 22/24] aplay: fix timespec to msec conversion

There is 1M nsec in a msec.

Signed-off-by: Olivier Langlois <olivier@trillion01.com>
Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 aplay/aplay.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/aplay/aplay.c b/aplay/aplay.c
index b21bd89..a826a89 100644
--- a/aplay/aplay.c
+++ b/aplay/aplay.c
@@ -1420,7 +1420,7 @@ static void xrun(void)
 			timermsub(&now, &tstamp, &diff);
 			fprintf(stderr, _("%s!!! (at least %.3f ms long)\n"),
 				stream == SND_PCM_STREAM_PLAYBACK ? _("underrun") : _("overrun"),
-				diff.tv_sec * 1000 + diff.tv_nsec / 10000000.0);
+				diff.tv_sec * 1000 + diff.tv_nsec / 1000000.0);
 #else
 			fprintf(stderr, "%s !!!\n", _("underrun"));
 #endif
-- 
1.9.3


From 4efce50c7ba740bef2fe965b58badd4a0a5b9a08 Mon Sep 17 00:00:00 2001
From: Karl Bongers <karlbongers@gmail.com>
Date: Tue, 6 May 2014 23:06:47 -0500
Subject: [PATCH 23/24] fix aconnect -l option

aconnect -l would just print usage.
This fix makes it do what usage says it should do.

Signed-off-by: Karl Bongers <karlbongers@gmail.com>
Signed-off-by: Jaroslav Kysela <perex@perex.cz>
---
 seq/aconnect/aconnect.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/seq/aconnect/aconnect.c b/seq/aconnect/aconnect.c
index 8c66cfd..8d6cebb 100644
--- a/seq/aconnect/aconnect.c
+++ b/seq/aconnect/aconnect.c
@@ -292,6 +292,7 @@ int main(int argc, char **argv)
 			convert_real = 0;
 			break;
 		case 'l':
+			command = LIST;
 			list_subs = 1;
 			break;
 		case 'x':
-- 
1.9.3


From 8f555c30092e576bd23db3ddf0dc67ce4249c40c Mon Sep 17 00:00:00 2001
From: Sergey <sergemp@mail.ru>
Date: Fri, 13 Jun 2014 05:28:49 +0400
Subject: [PATCH 24/24] aplay: Fix VU-meter stdout/stderr mess

Commit 6bbeb78d forgot to change some of VU-meter output to stderr.
This patch makes the output of `aplay -vvv` consistent again.

Signed-off-by: Sergey <sergemp@mail.ru>
Signed-off-by: Jaroslav Kysela <perex@perex.cz>
---
 aplay/aplay.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

--- alsa-utils-1.0.22/aplay/aplay.c.old	2014-06-22 09:32:50.690773528 +0200
+++ alsa-utils-1.0.22/aplay/aplay.c	2014-06-22 09:32:46.208524628 +0200
@@ -1685,12 +1685,12 @@ static void compute_max_peak(u_char *dat
 		fflush(stderr);
 	}
 	else if(verbose==3) {
-		printf(_("Max peak (%li samples): 0x%08x "), (long)ocount, max_peak[0]);
+		fprintf(stderr, _("Max peak (%li samples): 0x%08x "), (long)ocount, max_peak[0]);
 		for (val = 0; val < 20; val++)
 			if (val <= perc[0] / 5)
-				putchar('#');
+				putc('#', stderr);
 			else
-				putchar(' ');
+				putc(' ', stderr);
 		fprintf(stderr, " %i%%\n", perc[0]);
 		fflush(stderr);
 	}


From 723532174f06f2debdd2c5eaa98205ebee9b827e Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <perex@perex.cz>
Date: Wed, 25 Jun 2014 10:47:21 +0200
Subject: [PATCH 1/2] alsactl: save state - do not call rename for stdio

Signed-off-by: Jaroslav Kysela <perex@perex.cz>
---
 alsactl/state.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/alsactl/state.c b/alsactl/state.c
index 8b309ba..2916787 100644
--- a/alsactl/state.c
+++ b/alsactl/state.c
@@ -1627,7 +1627,7 @@ int save_state(const char *file, const char *cardname)
 	snd_output_close(out);
 	if (err < 0) {
 		error("snd_config_save: %s", snd_strerror(err));
-	} else {
+	} else if (nfile) {
 		//unlink(file);
 		err = rename(nfile, file);
 		if (err < 0)
-- 
1.9.3


From c9f6e23703d9725546d0e8ccd74c0eaac3fcc833 Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <perex@perex.cz>
Date: Wed, 25 Jun 2014 10:49:23 +0200
Subject: [PATCH 2/2] alsamixer: include missing mixer_controls.h

---
 alsamixer/mainloop.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/alsamixer/mainloop.c b/alsamixer/mainloop.c
index 351f57f..79d81a9 100644
--- a/alsamixer/mainloop.c
+++ b/alsamixer/mainloop.c
@@ -29,6 +29,7 @@
 #include "widget.h"
 #include "mixer_widget.h"
 #include "mixer_display.h"
+#include "mixer_controls.h"
 #include "mainloop.h"
 
 static WINDOW *curses_initialized;
-- 
1.9.3

