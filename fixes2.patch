From 98720042dcf3dec2d6e5354edb7ba889819f0f37 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Micha=C5=82=20G=C3=B3rny?= <mgorny@gentoo.org>
Date: Wed, 31 Aug 2011 22:27:10 +0200
Subject: [PATCH 01/23] fix use of $(SED)
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

The alsactl Makefile used 'sed $(SED)' which is going to failed when SED
is actually set. Replaced that with '$(SED)', and a few 'sed' calls in
alsaconf Makefile as well. Added AC_PROG_SED to configure to have it
set.

Fixes: https://bugtrack.alsa-project.org/alsa-bug/view.php?id=5363
Fixes: http://bugs.gentoo.org/show_bug.cgi?id=366587
Signed-off-by: Michał Górny <mgorny@gentoo.org>
Signed-off-by: Clemens Ladisch <clemens@ladisch.de>
---
 alsaconf/Makefile.am | 16 ++++++++--------
 configure.in         |  1 +
 2 files changed, 9 insertions(+), 8 deletions(-)

diff --git a/alsaconf/Makefile.am b/alsaconf/Makefile.am
index a11ecc5..a4f5e4a 100644
--- a/alsaconf/Makefile.am
+++ b/alsaconf/Makefile.am
@@ -5,13 +5,13 @@ SUBDIRS = po
 
 install-man8:
 	@for i in $(man_MANS); do \
-	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
-	  inst=`echo $$i | sed -e 's/\\.[^.]*$$//'`; \
+	  ext=`echo $$i | $(SED) -e 's/^.*\\.//'`; \
+	  inst=`echo $$i | $(SED) -e 's/\\.[^.]*$$//'`; \
 	  case $$inst in \
 	  *.[a-za-z]*)\
-	    loc=`echo $$inst | sed -e 's/^.*\\.//'`; \
+	    loc=`echo $$inst | $(SED) -e 's/^.*\\.//'`; \
 	    loc="/$$loc"; \
-	    inst=`echo $$inst | sed -e 's/\\.[^.]*$$//'`;; \
+	    inst=`echo $$inst | $(SED) -e 's/\\.[^.]*$$//'`;; \
 	  *)\
 	    loc="";; \
 	  esac; \
@@ -22,13 +22,13 @@ install-man8:
 
 uninstall-man8:
 	@for i in $(man_MANS); do \
-	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
-	  inst=`echo $$i | sed -e 's/\\.[^.]*$$//'`; \
+	  ext=`echo $$i | $(SED) -e 's/^.*\\.//'`; \
+	  inst=`echo $$i | $(SED) -e 's/\\.[^.]*$$//'`; \
 	  case $$inst in \
 	  *.[a-za-z]*)\
-	    loc=`echo $$inst | sed -e 's/^.*\\.//'`; \
+	    loc=`echo $$inst | $(SED) -e 's/^.*\\.//'`; \
 	    loc="/$$loc"; \
-	    inst=`echo $$inst | sed -e 's/\\.[^.]*$$//'`;; \
+	    inst=`echo $$inst | $(SED) -e 's/\\.[^.]*$$//'`;; \
 	  *)\
 	    loc="";; \
 	  esac; \
diff --git a/configure.in b/configure.in
index d51f6fa..2b9d10d 100644
--- a/configure.in
+++ b/configure.in
@@ -27,6 +27,7 @@ AC_PROG_CC
 dnl AC_PROG_CXX
 AC_PROG_INSTALL
 AC_PROG_LN_S
+AC_PROG_SED
 AM_PATH_ALSA(1.0.16)
 
 dnl Check components
-- 
1.7.11.4


From c8eaa9b39ffe2549b914a9285abf30a51b965442 Mon Sep 17 00:00:00 2001
From: David Henningsson <david.henningsson@canonical.com>
Date: Wed, 12 Oct 2011 19:37:57 +0200
Subject: [PATCH 03/23] aplay: Fix spelling error

BugLink: https://bugs.launchpad.net/bugs/816388
Reported-by: Chad Dunlap <cldunlap1@gmail.com>
Signed-off-by: David Henningsson <david.henningsson@canonical.com>
Signed-off-by: Clemens Ladisch <clemens@ladisch.de>
---
 aplay/aplay.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/aplay/aplay.c b/aplay/aplay.c
index 07e6bc0..5ab63a9 100644
--- a/aplay/aplay.c
+++ b/aplay/aplay.c
@@ -209,7 +209,7 @@ _("Usage: %s [OPTION]... [FILE]...\n"
 "    --disable-format    disable automatic format conversions\n"
 "    --disable-softvol   disable software volume control (softvol)\n"
 "    --test-position     test ring buffer position\n"
-"    --test-coef=#	 test coeficient for ring buffer position (default 8)\n"
+"    --test-coef=#       test coefficient for ring buffer position (default 8)\n"
 "                        expression for validation is: coef * (buffer_size / 2)\n"
 "    --test-nowait       do not wait for ring buffer - eats whole CPU\n"
 "    --max-file-time=#   start another output file when the old file has recorded\n"
-- 
1.7.11.4


From ed718c0b6fd9891b2f268ccdc5440ffe6add1ae9 Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <perex@perex.cz>
Date: Wed, 2 Nov 2011 17:27:47 +0100
Subject: [PATCH 04/23] alsamixer: Fix X-win related crash for PulseAudio
 plugin (bad linking)

A lot of reports that alsamixer crashes in X terminal when the PulseAudio
CTL plugin is activated were entered to the tracking systems.

I figured that there is a linking clash for the shutdown() function.
The shutdown() function in glibc is socket related, but the alsamixer code
redefines this function and appearently that under some linking
circumstances - which PA client invokes during the runtime dynamic linking
- the wrong function is called.

This patch, for safety, renames the shutdown() function from alsamixer
to app_shutdown(), but it might make sense to figure the real linking
culprit to avoid future surprises.

Signed-off-by: Jaroslav Kysela <perex@perex.cz>
---
 alsamixer/cli.c      | 2 +-
 alsamixer/die.c      | 4 ++--
 alsamixer/mainloop.c | 2 +-
 alsamixer/mainloop.h | 2 +-
 4 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/alsamixer/cli.c b/alsamixer/cli.c
index 3898196..bb4f030 100644
--- a/alsamixer/cli.c
+++ b/alsamixer/cli.c
@@ -130,6 +130,6 @@ int main(int argc, char *argv[])
 
 	mainloop();
 
-	shutdown();
+	app_shutdown();
 	return 0;
 }
diff --git a/alsamixer/die.c b/alsamixer/die.c
index dcd8536..899a501 100644
--- a/alsamixer/die.c
+++ b/alsamixer/die.c
@@ -26,14 +26,14 @@
 
 void fatal_error(const char *msg)
 {
-	shutdown();
+	app_shutdown();
 	fprintf(stderr, "%s\n", msg);
 	exit(EXIT_FAILURE);
 }
 
 void fatal_alsa_error(const char *msg, int err)
 {
-	shutdown();
+	app_shutdown();
 	fprintf(stderr, _("%s: %s\n"), msg, snd_strerror(err));
 	exit(EXIT_FAILURE);
 }
diff --git a/alsamixer/mainloop.c b/alsamixer/mainloop.c
index eddaf3b..dbfef9b 100644
--- a/alsamixer/mainloop.c
+++ b/alsamixer/mainloop.c
@@ -52,7 +52,7 @@ void initialize_curses(bool use_color)
 	snd_lib_error_set_handler(black_hole_error_handler);
 }
 
-void shutdown(void)
+void app_shutdown(void)
 {
 	if (curses_initialized) {
 		clear();
diff --git a/alsamixer/mainloop.h b/alsamixer/mainloop.h
index 0cfc989..22317be 100644
--- a/alsamixer/mainloop.h
+++ b/alsamixer/mainloop.h
@@ -5,6 +5,6 @@
 
 void initialize_curses(bool use_color);
 void mainloop(void);
-void shutdown(void);
+void app_shutdown(void);
 
 #endif
-- 
1.7.11.4


From 697e45fe7ca73e1d2b27b6a477e60c8af7b3d3c2 Mon Sep 17 00:00:00 2001
From: Clemens Ladisch <clemens@ladisch.de>
Date: Wed, 2 Nov 2011 19:44:12 +0100
Subject: [PATCH 05/23] aplaymidi: clarify multi-port documentation

The man page did not document what happens when multiple ports are
specified; this could be misinterpreted as the events being duplicated
so that they are played on all ports simultaneously.  As suggested by
Peter Billam, clarify that these ports are only used for multi-port MIDI
files.

Signed-off-by: Clemens Ladisch <clemens@ladisch.de>
---
 seq/aplaymidi/aplaymidi.1 | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/seq/aplaymidi/aplaymidi.1 b/seq/aplaymidi/aplaymidi.1
index 0134129..02fef9d 100644
--- a/seq/aplaymidi/aplaymidi.1
+++ b/seq/aplaymidi/aplaymidi.1
@@ -1,4 +1,4 @@
-.TH APLAYMIDI 1 "15 Feb 2004"
+.TH APLAYMIDI 1 "2 Nov 2011"
 
 .SH NAME
 aplaymidi \- play Standard MIDI Files
@@ -35,6 +35,10 @@ A client can be specified by its number, its name, or a prefix of its
 name. A port is specified by its number; for port 0 of a client, the
 ":0" part of the port specification can be omitted.
 
+Multiple ports can be specified to allow playback of MIDI file(s) that
+contain events for multiple devices (ports), as specified by "Port
+Number" meta events.
+
 For compatibility with
 .B pmidi(1),
 the port specification is taken from the
@@ -46,6 +50,10 @@ environment variable if none is given on the command line.
 Specifies how long to wait after the end of each MIDI file,
 to allow the last notes to die away.
 
+.SH BUGS
+.B aplaymidi
+handles "Port Number" meta events, but not "Port Name" meta events.
+
 .SH SEE ALSO
 pmidi(1)
 .br
-- 
1.7.11.4


From 3aa4290c61d3b9e0b18eb0531edbe1ce45cd9a51 Mon Sep 17 00:00:00 2001
From: Takashi Iwai <tiwai@suse.de>
Date: Fri, 4 Nov 2011 17:01:57 +0100
Subject: [PATCH 06/23] alsactl: Initialize Front Speaker, etc

Add missing initialization of surround and CLFE playback volumes and
switches.  Ditto for "Front Speaker", etc.

Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 alsactl/init/default | 70 ++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 70 insertions(+)

diff --git a/alsactl/init/default b/alsactl/init/default
index b7cb941..af64cb1 100644
--- a/alsactl/init/default
+++ b/alsactl/init/default
@@ -53,6 +53,36 @@ CTL{name}="Front Playback Switch",CTL{do_search}=="1", \
   CTL{values}="on"
 
 CTL{reset}="mixer"
+CTL{name}="Surround Playback Volume",PROGRAM!="__ctl_search",GOTO=""
+# if master volume control is present, turn front volume to max
+ENV{has_pmaster_vol}=="true",CTL{write}=="0dB",GOTO=""
+ENV{has_pmaster_vol}=="true",CTL{write}=="100%",GOTO=""
+CTL{write}!="$env{pvolume}",CTL{values}="$env{ppercent}"
+LABEL=""
+CTL{name}="Surround Playback Switch",CTL{do_search}=="1", \
+  CTL{values}="on"
+
+CTL{reset}="mixer"
+CTL{name}="Center Playback Volume",PROGRAM!="__ctl_search",GOTO=""
+# if master volume control is present, turn front volume to max
+ENV{has_pmaster_vol}=="true",CTL{write}=="0dB",GOTO=""
+ENV{has_pmaster_vol}=="true",CTL{write}=="100%",GOTO=""
+CTL{write}!="$env{pvolume}",CTL{values}="$env{ppercent}"
+LABEL=""
+CTL{name}="Center Playback Switch",CTL{do_search}=="1", \
+  CTL{values}="on"
+
+CTL{reset}="mixer"
+CTL{name}="LFE Playback Volume",PROGRAM!="__ctl_search",GOTO=""
+# if master volume control is present, turn front volume to max
+ENV{has_pmaster_vol}=="true",CTL{write}=="0dB",GOTO=""
+ENV{has_pmaster_vol}=="true",CTL{write}=="100%",GOTO=""
+CTL{write}!="$env{pvolume}",CTL{values}="$env{ppercent}"
+LABEL=""
+CTL{name}="LFE Playback Switch",CTL{do_search}=="1", \
+  CTL{values}="on"
+
+CTL{reset}="mixer"
 CTL{name}="Headphone Playback Volume",PROGRAM!="__ctl_search",GOTO=""
 # if master volume control is present, turn headphone volume to max
 ENV{has_pmaster_vol}=="true",CTL{write}=="0dB",GOTO=""
@@ -84,6 +114,46 @@ CTL{name}="Speaker Playback Switch",CTL{do_search}=="1", \
   CTL{values}="on"
 
 CTL{reset}="mixer"
+CTL{name}="Front Speaker Playback Volume",PROGRAM!="__ctl_search",GOTO=""
+# if master volume control is present, turn speaker volume to max
+ENV{has_pmaster_vol}=="true",CTL{write}=="0dB",GOTO=""
+ENV{has_pmaster_vol}=="true",CTL{write}=="100%",GOTO=""
+CTL{write}!="$env{pvolume}",CTL{values}="$env{ppercent}"
+LABEL=""
+CTL{name}="Front Speaker Playback Switch",CTL{do_search}=="1", \
+  CTL{values}="on"
+
+CTL{reset}="mixer"
+CTL{name}="Front Speaker Playback Volume",PROGRAM!="__ctl_search",GOTO=""
+# if master volume control is present, turn speaker volume to max
+ENV{has_pmaster_vol}=="true",CTL{write}=="0dB",GOTO=""
+ENV{has_pmaster_vol}=="true",CTL{write}=="100%",GOTO=""
+CTL{write}!="$env{pvolume}",CTL{values}="$env{ppercent}"
+LABEL=""
+CTL{name}="Surround Speaker Playback Switch",CTL{do_search}=="1", \
+  CTL{values}="on"
+
+CTL{reset}="mixer"
+CTL{name}="Front Speaker Playback Volume",PROGRAM!="__ctl_search",GOTO=""
+# if master volume control is present, turn speaker volume to max
+ENV{has_pmaster_vol}=="true",CTL{write}=="0dB",GOTO=""
+ENV{has_pmaster_vol}=="true",CTL{write}=="100%",GOTO=""
+CTL{write}!="$env{pvolume}",CTL{values}="$env{ppercent}"
+LABEL=""
+CTL{name}="Center Speaker Playback Switch",CTL{do_search}=="1", \
+  CTL{values}="on"
+
+CTL{reset}="mixer"
+CTL{name}="Front Speaker Playback Volume",PROGRAM!="__ctl_search",GOTO=""
+# if master volume control is present, turn speaker volume to max
+ENV{has_pmaster_vol}=="true",CTL{write}=="0dB",GOTO=""
+ENV{has_pmaster_vol}=="true",CTL{write}=="100%",GOTO=""
+CTL{write}!="$env{pvolume}",CTL{values}="$env{ppercent}"
+LABEL=""
+CTL{name}="LFE Speaker Playback Switch",CTL{do_search}=="1", \
+  CTL{values}="on"
+
+CTL{reset}="mixer"
 CTL{name}="PC Speaker Playback Volume",CTL{do_search}=="1", \
   CTL{values}="$env{pvolume}",RESULT!="0",CTL{values}="$env{ppercent}"
 CTL{name}="PC Speaker Playback Switch",CTL{do_search}=="1", \
-- 
1.7.11.4


From 8a83252def22ba3abc0069e68cc402ab7dcd9de3 Mon Sep 17 00:00:00 2001
From: David Henningsson <david.henningsson@canonical.com>
Date: Wed, 11 Jan 2012 17:45:14 +0100
Subject: [PATCH 07/23] Alsa-utils: Fix typo causing some volumes not to be
 initialized

When I was reading the source code, I stumbled over this typo causing
Center, LFE, and Surround speakers not to be initialized.

Signed-off-by: David Henningsson <david.henningsson@canonical.com>
Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 alsactl/init/default | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/alsactl/init/default b/alsactl/init/default
index af64cb1..5fb0113 100644
--- a/alsactl/init/default
+++ b/alsactl/init/default
@@ -124,7 +124,7 @@ CTL{name}="Front Speaker Playback Switch",CTL{do_search}=="1", \
   CTL{values}="on"
 
 CTL{reset}="mixer"
-CTL{name}="Front Speaker Playback Volume",PROGRAM!="__ctl_search",GOTO=""
+CTL{name}="Surround Speaker Playback Volume",PROGRAM!="__ctl_search",GOTO=""
 # if master volume control is present, turn speaker volume to max
 ENV{has_pmaster_vol}=="true",CTL{write}=="0dB",GOTO=""
 ENV{has_pmaster_vol}=="true",CTL{write}=="100%",GOTO=""
@@ -134,7 +134,7 @@ CTL{name}="Surround Speaker Playback Switch",CTL{do_search}=="1", \
   CTL{values}="on"
 
 CTL{reset}="mixer"
-CTL{name}="Front Speaker Playback Volume",PROGRAM!="__ctl_search",GOTO=""
+CTL{name}="Center Speaker Playback Volume",PROGRAM!="__ctl_search",GOTO=""
 # if master volume control is present, turn speaker volume to max
 ENV{has_pmaster_vol}=="true",CTL{write}=="0dB",GOTO=""
 ENV{has_pmaster_vol}=="true",CTL{write}=="100%",GOTO=""
@@ -144,7 +144,7 @@ CTL{name}="Center Speaker Playback Switch",CTL{do_search}=="1", \
   CTL{values}="on"
 
 CTL{reset}="mixer"
-CTL{name}="Front Speaker Playback Volume",PROGRAM!="__ctl_search",GOTO=""
+CTL{name}="LFE Speaker Playback Volume",PROGRAM!="__ctl_search",GOTO=""
 # if master volume control is present, turn speaker volume to max
 ENV{has_pmaster_vol}=="true",CTL{write}=="0dB",GOTO=""
 ENV{has_pmaster_vol}=="true",CTL{write}=="100%",GOTO=""
-- 
1.7.11.4


From 4b3b61129a911c00f1662acb3c1434a5dd2cb7f9 Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <perex@perex.cz>
Date: Wed, 25 Jan 2012 10:40:25 +0100
Subject: [PATCH 08/23] aplay: Add backward compatible endian macro
 definitions

Signed-off-by: Jaroslav Kysela <perex@perex.cz>
---
 aplay/aplay.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/aplay/aplay.c b/aplay/aplay.c
index 5ab63a9..73a9544 100644
--- a/aplay/aplay.c
+++ b/aplay/aplay.c
@@ -58,6 +58,14 @@
 #define LLONG_MAX    9223372036854775807LL
 #endif
 
+#ifndef le16toh
+#include <asm/byteorder.h>
+#define le16toh(x) __le16_to_cpu(x)
+#define be16toh(x) __be16_to_cpu(x)
+#define le32toh(x) __le32_to_cpu(x)
+#define be32toh(x) __be32_to_cpu(x)
+#endif
+
 #define DEFAULT_FORMAT		SND_PCM_FORMAT_U8
 #define DEFAULT_SPEED 		8000
 
-- 
1.7.11.4


From 1bb0158838711f208f6eaf2a266696cedf48f3f7 Mon Sep 17 00:00:00 2001
From: Jaroslav Kysela <perex@perex.cz>
Date: Mon, 6 Feb 2012 14:58:03 +0100
Subject: [PATCH 09/23] Fix the examples in aplay.1

Signed-off-by: Jaroslav Kysela <perex@perex.cz>
---
 aplay/aplay.1 | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/aplay/aplay.1 b/aplay/aplay.1
index 8ccf556..2acaed5 100644
--- a/aplay/aplay.1
+++ b/aplay/aplay.1
@@ -213,14 +213,14 @@ pcm.copy {
 .fi
 
 .TP
-\fBarecord \-t wav \-max-file_time 30 mon.wav\fP
+\fBarecord \-t wav \-\-max-file-time 30 mon.wav\fP
 Record from the default audio source in monaural, 8,000 samples
 per second, 8 bits per sample.  Start a new file every
 30 seconds.  File names are mon-nn.wav, where nn increases
 from 01.  The file after mon-99.wav is mon-100.wav.
 
 .TP
-\fBarecord \-f cd \-t wav \-max-file-time 3600 --use-strftime %Y/%m/%d/listen-%H-%M-%v.wav\fP
+\fBarecord \-f cd \-t wav \-\-max-file-time 3600 --use-strftime %Y/%m/%d/listen-%H-%M-%v.wav\fP
 Record in stereo from the default audio source.  Create a new file
 every hour.  The files are placed in directories based on their start dates
 and have names which include their start times and file numbers.
-- 
1.7.11.4


From 2b22a0ec20a46ffd7d42b425f39ed507fc6b1eea Mon Sep 17 00:00:00 2001
From: Vikram Narayanan <vikram186@gmail.com>
Date: Sat, 11 Feb 2012 13:47:48 +0530
Subject: [PATCH 10/23] Trivial fixes in INSTALL file

Changed from HG->git in the INSTALL file

Signed-off-by: Vikram Narayanan <vikram186@gmail.com>
Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 INSTALL | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/INSTALL b/INSTALL
index 202c491..544d5d2 100644
--- a/INSTALL
+++ b/INSTALL
@@ -24,11 +24,11 @@ package. The configure script from alsa-utils package probably cannot find
 header file asoundlib.h in $prefix/include/alsa directory (usually in
 /usr/include/alsa directory).
 
-Compilation from HG sources
+Compilation from git sources
 ---------------------------
 
 You need also GNU packages autoconf and automake installed in your system
-to compile HG (Mercurial) sources of alsa-utils package.
+to compile git sources of alsa-utils package.
 
 For compilation you can use these commands:
 
@@ -40,7 +40,7 @@ For compilation you can use these commands:
 	./configure
 	make
 
-The included hgcompile script does this job for you.
+The included gitcompile script does this job for you.
 
 Note: Some automake packages have missing aclocal program. Use newer version
       in the case.
-- 
1.7.11.4


From 7a5f554bd1ba1d77a0b1e8c5756ff69ad4a58ffa Mon Sep 17 00:00:00 2001
From: Pavel Hofman <pavel.hofman@ivitera.com>
Date: Mon, 5 Mar 2012 21:27:00 +0000
Subject: [PATCH 12/23] aplay - option to dump HW parameters

Dumping HW parameters of the current device with snd_pcm_hw_params_dump,
a new option --dump-hw-params added.

Signed-off-by: Pavel Hofman <pavel.hofman@ivitera.com>
Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 aplay/aplay.1 |  7 +++++++
 aplay/aplay.c | 18 ++++++++++++++++--
 2 files changed, 23 insertions(+), 2 deletions(-)

diff --git a/aplay/aplay.1 b/aplay/aplay.1
index 2acaed5..0195322 100644
--- a/aplay/aplay.1
+++ b/aplay/aplay.1
@@ -184,6 +184,13 @@ the month, %H hour, %M minute and %S second.  In addition, %v is
 the file number, starting at 1.  When this option is specified,
 intermediate directories for the output file are created automatically.
 This option has no effect if \-\-separate\-channels is specified.
+.TP
+\fI\-\-dump\-hw\-params\fP
+Dump hw_params of the device preconfigured status to stderr. The dump
+lists capabilities of the selected device such as supported formats,
+sampling rates, numbers of channels, period and buffer bytes/sizes/times.
+For raw device hw:X this option basically lists hardware capabilities of
+the soundcard.
 
 .SH SIGNALS
 When recording, SIGINT, SIGTERM and SIGABRT will close the output 
diff --git a/aplay/aplay.c b/aplay/aplay.c
index 73a9544..0633cbd 100644
--- a/aplay/aplay.c
+++ b/aplay/aplay.c
@@ -129,6 +129,7 @@ static int max_file_time = 0;
 static int use_strftime = 0;
 volatile static int recycle_capture_file = 0;
 static long term_c_lflag = -1;
+static int dump_hw_params = 0;
 
 static int fd = -1;
 static off64_t pbrec_count = LLONG_MAX, fdcount;
@@ -223,7 +224,8 @@ _("Usage: %s [OPTION]... [FILE]...\n"
 "    --max-file-time=#   start another output file when the old file has recorded\n"
 "                        for this many seconds\n"
 "    --process-id-file   write the process ID here\n"
-"    --use-strftime      apply the strftime facility to the output file name\n")
+"    --use-strftime      apply the strftime facility to the output file name\n"
+"    --dump-hw-params    dump hw_params of the device\n")
 		, command);
 	printf(_("Recognized sample formats are:"));
 	for (k = 0; k < SND_PCM_FORMAT_LAST; ++k) {
@@ -416,7 +418,8 @@ enum {
 	OPT_TEST_NOWAIT,
 	OPT_MAX_FILE_TIME,
 	OPT_PROCESS_ID_FILE,
-	OPT_USE_STRFTIME
+	OPT_USE_STRFTIME,
+	OPT_DUMP_HWPARAMS
 };
 
 int main(int argc, char *argv[])
@@ -461,6 +464,7 @@ int main(int argc, char *argv[])
 		{"process-id-file", 1, 0, OPT_PROCESS_ID_FILE},
 		{"use-strftime", 0, 0, OPT_USE_STRFTIME},
 		{"interactive", 0, 0, 'i'},
+		{"dump-hw-params", 0, 0, OPT_DUMP_HWPARAMS},
 		{0, 0, 0, 0}
 	};
 	char *pcm_name = "default";
@@ -662,6 +666,9 @@ int main(int argc, char *argv[])
 		case OPT_USE_STRFTIME:
 			use_strftime = 1;
 			break;
+		case OPT_DUMP_HWPARAMS:
+			dump_hw_params = 1;
+			break;
 		default:
 			fprintf(stderr, _("Try `%s --help' for more information.\n"), command);
 			return 1;
@@ -1059,6 +1066,13 @@ static void set_params(void)
 		error(_("Broken configuration for this PCM: no configurations available"));
 		prg_exit(EXIT_FAILURE);
 	}
+	if (dump_hw_params) {
+		fprintf(stderr, _("HW Params of device \"%s\":\n"),
+			snd_pcm_name(handle));
+		fprintf(stderr, "--------------------\n");
+		snd_pcm_hw_params_dump(params, log);
+		fprintf(stderr, "--------------------\n");
+	}
 	if (mmap_flag) {
 		snd_pcm_access_mask_t *mask = alloca(snd_pcm_access_mask_sizeof());
 		snd_pcm_access_mask_none(mask);
-- 
1.7.11.4


From 5a4082a396e510ace6257bb743f5a7373430ebe8 Mon Sep 17 00:00:00 2001
From: Takashi Iwai <tiwai@suse.de>
Date: Mon, 12 Mar 2012 10:56:22 +0100
Subject: [PATCH 13/23] amixer: Add the support for mapped volumes like
 alsamixer

When -M option is given, amixer handles the volumes in percent unit
with the mapping more intuitive to human ears just like in alsamixer.

The -R option is to take the raw value as the volume percentage.
This mode is still used as default.

Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 amixer/Makefile.am |   2 +-
 amixer/amixer.c    | 238 +++++++++++++++++++++++++++++++----------------------
 2 files changed, 141 insertions(+), 99 deletions(-)

diff --git a/amixer/Makefile.am b/amixer/Makefile.am
index fcd0e81..ba67a57 100644
--- a/amixer/Makefile.am
+++ b/amixer/Makefile.am
@@ -4,7 +4,7 @@ LDADD = -lm
 # CFLAGS += -g -Wall
 
 bin_PROGRAMS = amixer
-amixer_SOURCES = amixer.c
+amixer_SOURCES = amixer.c ../alsamixer/volume_mapping.c
 noinst_HEADERS = amixer.h
 man_MANS = amixer.1
 EXTRA_DIST = amixer.1
diff --git a/amixer/amixer.c b/amixer/amixer.c
index 9d2855d..a0a7387 100644
--- a/amixer/amixer.c
+++ b/amixer/amixer.c
@@ -29,7 +29,9 @@
 #include <assert.h>
 #include <alsa/asoundlib.h>
 #include <sys/poll.h>
+#include <stdint.h>
 #include "amixer.h"
+#include "../alsamixer/volume_mapping.h"
 
 #define LEVEL_BASIC		(1<<0)
 #define LEVEL_INACTIVE		(1<<1)
@@ -68,6 +70,8 @@ static int help(void)
 	printf("  -i,--inactive   show also inactive controls\n");
 	printf("  -a,--abstract L select abstraction level (none or basic)\n");
 	printf("  -s,--stdin      Read and execute commands from stdin sequentially\n");
+	printf("  -R,--raw-volume Use the raw value (default)\n");
+	printf("  -M,--mapped-volume Use the mapped volume\n");
 	printf("\nAvailable commands:\n");
 	printf("  scontrols       show all mixer simple controls\n");
 	printf("  scontents	  show contents of all mixer simple controls (default command)\n");
@@ -187,9 +191,9 @@ static int convert_db_range(int val, int omin, int omax, int nmin, int nmax)
 
 /* Fuction to convert from volume to percentage. val = volume */
 
-static int convert_prange(int val, int min, int max)
+static int convert_prange(long val, long min, long max)
 {
-	int range = max - min;
+	long range = max - min;
 	int tmp;
 
 	if (range == 0)
@@ -204,29 +208,6 @@ static int convert_prange(int val, int min, int max)
 #define convert_prange1(val, min, max) \
 	ceil((val) * ((max) - (min)) * 0.01 + (min))
 
-static const char *get_percent(int val, int min, int max)
-{
-	static char str[32];
-	int p;
-	
-	p = convert_prange(val, min, max);
-	sprintf(str, "%i [%i%%]", val, p);
-	return str;
-}
-
-#if 0
-static const char *get_percent1(int val, int min, int max, int min_dB, int max_dB)
-{
-	static char str[32];
-	int p, db;
-
-	p = convert_prange(val, min, max);
-	db = convert_db_range(val, min, max, min_dB, max_dB);
-	sprintf(str, "%i [%i%%] [%i.%02idB]", val, p, db / 100, abs(db % 100));
-	return str;
-}
-#endif
-
 static long get_integer(char **ptr, long min, long max)
 {
 	long val = min;
@@ -288,26 +269,83 @@ struct volume_ops {
 	int (*get)(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t c,
 		   long *value);
 	int (*set)(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t c,
-		   long value);
+		   long value, int dir);
 };
 	
-enum { VOL_RAW, VOL_DB };
+enum { VOL_RAW, VOL_DB, VOL_MAP };
 
 struct volume_ops_set {
 	int (*has_volume)(snd_mixer_elem_t *elem);
-	struct volume_ops v[2];
+	struct volume_ops v[3];
 };
 
 static int set_playback_dB(snd_mixer_elem_t *elem,
-			   snd_mixer_selem_channel_id_t c, long value)
+			   snd_mixer_selem_channel_id_t c, long value, int dir)
 {
-	return snd_mixer_selem_set_playback_dB(elem, c, value, 0);
+	return snd_mixer_selem_set_playback_dB(elem, c, value, dir);
 }
 
 static int set_capture_dB(snd_mixer_elem_t *elem,
-			  snd_mixer_selem_channel_id_t c, long value)
+			  snd_mixer_selem_channel_id_t c, long value, int dir)
+{
+	return snd_mixer_selem_set_capture_dB(elem, c, value, dir);
+}
+
+static int set_playback_raw_volume(snd_mixer_elem_t *elem,
+				   snd_mixer_selem_channel_id_t c,
+				   long value, int dir)
+{
+	return snd_mixer_selem_set_playback_volume(elem, c, value);
+}
+
+static int set_capture_raw_volume(snd_mixer_elem_t *elem,
+				  snd_mixer_selem_channel_id_t c,
+				  long value, int dir)
+{
+	return snd_mixer_selem_set_capture_volume(elem, c, value);
+}
+
+/* FIXME: normalize to int32 space to be compatible with other types */
+#define MAP_VOL_RES	(INT32_MAX / 100)
+
+static int get_mapped_volume_range(snd_mixer_elem_t *elem,
+				   long *pmin, long *pmax)
+{
+	*pmin = 0;
+	*pmax = MAP_VOL_RES;
+	return 0;
+}
+
+static int get_playback_mapped_volume(snd_mixer_elem_t *elem,
+				      snd_mixer_selem_channel_id_t c,
+				      long *value)
+{
+	*value = (rint)(get_normalized_playback_volume(elem, c) * MAP_VOL_RES);
+	return 0;
+}
+
+static int set_playback_mapped_volume(snd_mixer_elem_t *elem,
+				      snd_mixer_selem_channel_id_t c,
+				      long value, int dir)
 {
-	return snd_mixer_selem_set_capture_dB(elem, c, value, 0);
+	return set_normalized_playback_volume(elem, c,
+					      (double)value / MAP_VOL_RES, dir);
+}
+
+static int get_capture_mapped_volume(snd_mixer_elem_t *elem,
+				     snd_mixer_selem_channel_id_t c,
+				     long *value)
+{
+	*value = (rint)(get_normalized_capture_volume(elem, c) * MAP_VOL_RES);
+	return 0;
+}
+
+static int set_capture_mapped_volume(snd_mixer_elem_t *elem,
+				     snd_mixer_selem_channel_id_t c,
+				     long value, int dir)
+{
+	return set_normalized_capture_volume(elem, c,
+					     (double)value / MAP_VOL_RES, dir);
 }
 
 static const struct volume_ops_set vol_ops[2] = {
@@ -315,29 +353,42 @@ static const struct volume_ops_set vol_ops[2] = {
 		.has_volume = snd_mixer_selem_has_playback_volume,
 		.v = {{ snd_mixer_selem_get_playback_volume_range,
 			snd_mixer_selem_get_playback_volume,
-			snd_mixer_selem_set_playback_volume },
+			set_playback_raw_volume },
 		      { snd_mixer_selem_get_playback_dB_range,
 			snd_mixer_selem_get_playback_dB,
-			set_playback_dB }},
+			set_playback_dB },
+		      { get_mapped_volume_range,
+			get_playback_mapped_volume,
+			set_playback_mapped_volume },
+		},
 	},
 	{
 		.has_volume = snd_mixer_selem_has_capture_volume,
 		.v = {{ snd_mixer_selem_get_capture_volume_range,
 			snd_mixer_selem_get_capture_volume,
-			snd_mixer_selem_set_capture_volume },
+			set_capture_raw_volume },
 		      { snd_mixer_selem_get_capture_dB_range,
 			snd_mixer_selem_get_capture_dB,
-			set_capture_dB }},
+			set_capture_dB },
+		      { get_mapped_volume_range,
+			get_capture_mapped_volume,
+			set_capture_mapped_volume },
+		},
 	},
 };
 
+static int std_vol_type = VOL_RAW;
+
 static int set_volume_simple(snd_mixer_elem_t *elem,
 			     snd_mixer_selem_channel_id_t chn,
 			     char **ptr, int dir)
 {
 	long val, orig, pmin, pmax;
 	char *p = *ptr, *s;
-	int invalid = 0, err = 0, vol_type = VOL_RAW;
+	int invalid = 0, percent = 0, err = 0;
+	int vol_type = std_vol_type;
+	double scale = 1.0;
+	int correct = 0;
 
 	if (! vol_ops[dir].has_volume(elem))
 		invalid = 1;
@@ -347,10 +398,6 @@ static int set_volume_simple(snd_mixer_elem_t *elem,
 	if (*p == '\0' || (!isdigit(*p) && *p != '-'))
 		goto skip;
 
-	if (! invalid &&
-	    vol_ops[dir].v[VOL_RAW].get_range(elem, &pmin, &pmax) < 0)
-		invalid = 1;
-
 	s = p;
 	val = strtol(s, &p, 10);
 	if (*p == '.') {
@@ -358,32 +405,37 @@ static int set_volume_simple(snd_mixer_elem_t *elem,
 		strtol(p, &p, 10);
 	}
 	if (*p == '%') {
-		if (! invalid)
-			val = (long)convert_prange1(strtod(s, NULL), pmin, pmax);
+		percent = 1;
 		p++;
 	} else if (p[0] == 'd' && p[1] == 'B') {
-		if (! invalid) {
-			val = (long)(strtod(s, NULL) * 100.0);
-			vol_type = VOL_DB;
-			if (vol_ops[dir].v[vol_type].get_range(elem, &pmin, &pmax) < 0)
-				invalid = 1;
-		}
+		vol_type = VOL_DB;
 		p += 2;
-	}
+		scale = 100;
+	} else
+		vol_type = VOL_RAW;
+
+	val = (long)(strtod(s, NULL) * scale);
+	if (vol_ops[dir].v[vol_type].get_range(elem, &pmin, &pmax) < 0)
+		invalid = 1;
+	if (percent)
+		val = (long)convert_prange1(val, pmin, pmax);
 	if (*p == '+' || *p == '-') {
 		if (! invalid) {
 			if (vol_ops[dir].v[vol_type].get(elem, chn, &orig) < 0)
 				invalid = 1;
-			if (*p == '+')
+			if (*p == '+') {
 				val = orig + val;
-			else
+				correct = -1;
+			} else {
 				val = orig - val;
+				correct = 1;
+			}
 		}
 		p++;
 	}
 	if (! invalid) {
 		val = check_range(val, pmin, pmax);
-		err = vol_ops[dir].v[vol_type].set(elem, chn, val);
+		err = vol_ops[dir].v[vol_type].set(elem, chn, val, correct);
 	}
  skip:
 	if (*p == ',')
@@ -711,15 +763,33 @@ static int controls(int level)
 	return 0;
 }
 
+static void show_selem_volume(snd_mixer_elem_t *elem, 
+			      snd_mixer_selem_channel_id_t chn, int dir,
+			      long min, long max)
+{
+	long raw, val;
+	vol_ops[dir].v[VOL_RAW].get(elem, chn, &raw);
+	if (std_vol_type == VOL_RAW)
+		val = convert_prange(raw, min, max);
+	else {
+		vol_ops[dir].v[std_vol_type].get(elem, chn, &val);
+		val = convert_prange(val, 0, MAP_VOL_RES);
+	}
+	printf(" %li [%li%%]", raw, val);
+	if (!vol_ops[dir].v[VOL_DB].get(elem, chn, &val)) {
+		printf(" [");
+		print_dB(val);
+		printf("]");
+	}
+}
+
 static int show_selem(snd_mixer_t *handle, snd_mixer_selem_id_t *id, const char *space, int level)
 {
 	snd_mixer_selem_channel_id_t chn;
 	long pmin = 0, pmax = 0;
 	long cmin = 0, cmax = 0;
-	long pvol, cvol;
 	int psw, csw;
 	int pmono, cmono, mono_ok = 0;
-	long db;
 	snd_mixer_elem_t *elem;
 	
 	elem = snd_mixer_find_selem(handle, id);
@@ -868,13 +938,7 @@ static int show_selem(snd_mixer_t *handle, snd_mixer_selem_id_t *id, const char
 				mono_ok = 1;
 			}
 			if (snd_mixer_selem_has_common_volume(elem)) {
-				snd_mixer_selem_get_playback_volume(elem, SND_MIXER_SCHN_MONO, &pvol);
-				printf(" %s", get_percent(pvol, pmin, pmax));
-				if (!snd_mixer_selem_get_playback_dB(elem, SND_MIXER_SCHN_MONO, &db)) {
-					printf(" [");
-					print_dB(db);
-					printf("]");
-				}
+				show_selem_volume(elem, SND_MIXER_SCHN_MONO, 0, pmin, pmax);
 			}
 			if (snd_mixer_selem_has_common_switch(elem)) {
 				snd_mixer_selem_get_playback_switch(elem, SND_MIXER_SCHN_MONO, &psw);
@@ -891,13 +955,7 @@ static int show_selem(snd_mixer_t *handle, snd_mixer_selem_id_t *id, const char
 				if (snd_mixer_selem_has_playback_volume(elem)) {
 					printf(" Playback");
 					title = 1;
-					snd_mixer_selem_get_playback_volume(elem, SND_MIXER_SCHN_MONO, &pvol);
-					printf(" %s", get_percent(pvol, pmin, pmax));
-					if (!snd_mixer_selem_get_playback_dB(elem, SND_MIXER_SCHN_MONO, &db)) {
-						printf(" [");
-						print_dB(db);
-						printf("]");
-					}
+					show_selem_volume(elem, SND_MIXER_SCHN_MONO, 0, pmin, pmax);
 				}
 			}
 			if (!snd_mixer_selem_has_common_switch(elem)) {
@@ -919,13 +977,7 @@ static int show_selem(snd_mixer_t *handle, snd_mixer_selem_id_t *id, const char
 				if (snd_mixer_selem_has_capture_volume(elem)) {
 					printf(" Capture");
 					title = 1;
-					snd_mixer_selem_get_capture_volume(elem, SND_MIXER_SCHN_MONO, &cvol);
-					printf(" %s", get_percent(cvol, cmin, cmax));
-					if (!snd_mixer_selem_get_capture_dB(elem, SND_MIXER_SCHN_MONO, &db)) {
-						printf(" [");
-						print_dB(db);
-						printf("]");
-					}
+					show_selem_volume(elem, SND_MIXER_SCHN_MONO, 1, cmin, cmax);
 				}
 			}
 			if (!snd_mixer_selem_has_common_switch(elem)) {
@@ -946,13 +998,7 @@ static int show_selem(snd_mixer_t *handle, snd_mixer_selem_id_t *id, const char
 					continue;
 				printf("%s%s:", space, snd_mixer_selem_channel_name(chn));
 				if (!pmono && !cmono && snd_mixer_selem_has_common_volume(elem)) {
-					snd_mixer_selem_get_playback_volume(elem, chn, &pvol);
-					printf(" %s", get_percent(pvol, pmin, pmax));
-					if (!snd_mixer_selem_get_playback_dB(elem, chn, &db)) {
-						printf(" [");
-						print_dB(db);
-						printf("]");
-					}
+					show_selem_volume(elem, chn, 0, pmin, pmax);
 				}
 				if (!pmono && !cmono && snd_mixer_selem_has_common_switch(elem)) {
 					snd_mixer_selem_get_playback_switch(elem, chn, &psw);
@@ -964,13 +1010,7 @@ static int show_selem(snd_mixer_t *handle, snd_mixer_selem_id_t *id, const char
 						if (snd_mixer_selem_has_playback_volume(elem)) {
 							printf(" Playback");
 							title = 1;
-							snd_mixer_selem_get_playback_volume(elem, chn, &pvol);
-							printf(" %s", get_percent(pvol, pmin, pmax));
-							if (!snd_mixer_selem_get_playback_dB(elem, chn, &db)) {
-								printf(" [");
-								print_dB(db);
-								printf("]");
-							}
+							show_selem_volume(elem, chn, 0, pmin, pmax);
 						}
 					}
 					if (!snd_mixer_selem_has_common_switch(elem)) {
@@ -988,13 +1028,7 @@ static int show_selem(snd_mixer_t *handle, snd_mixer_selem_id_t *id, const char
 						if (snd_mixer_selem_has_capture_volume(elem)) {
 							printf(" Capture");
 							title = 1;
-							snd_mixer_selem_get_capture_volume(elem, chn, &cvol);
-							printf(" %s", get_percent(cvol, cmin, cmax));
-							if (!snd_mixer_selem_get_capture_dB(elem, chn, &db)) {
-								printf(" [");
-								print_dB(db);
-								printf("]");
-							}
+							show_selem_volume(elem, chn, 1, cmin, cmax);
 						}
 					}
 					if (!snd_mixer_selem_has_common_switch(elem)) {
@@ -1927,6 +1961,8 @@ int main(int argc, char *argv[])
 		{"version", 0, NULL, 'v'},
 		{"abstract", 1, NULL, 'a'},
 		{"stdin", 0, NULL, 's'},
+		{"raw-volume", 0, NULL, 'R'},
+		{"mapped-volume", 0, NULL, 'M'},
 		{NULL, 0, NULL, 0},
 	};
 
@@ -1934,7 +1970,7 @@ int main(int argc, char *argv[])
 	while (1) {
 		int c;
 
-		if ((c = getopt_long(argc, argv, "hc:D:qidnva:s", long_option, NULL)) < 0)
+		if ((c = getopt_long(argc, argv, "hc:D:qidnva:sRM", long_option, NULL)) < 0)
 			break;
 		switch (c) {
 		case 'h':
@@ -1987,6 +2023,12 @@ int main(int argc, char *argv[])
 		case 's':
 			read_stdin = 1;
 			break;
+		case 'R':
+			std_vol_type = VOL_RAW;
+			break;
+		case 'M':
+			std_vol_type = VOL_MAP;
+			break;
 		default:
 			fprintf(stderr, "Invalid switch or option needs an argument.\n");
 			morehelp++;
-- 
1.7.11.4


From f99c1c65ccbbf5f0bd1cbbc105dbbedeca882d61 Mon Sep 17 00:00:00 2001
From: Ben Gardiner <bengardiner@nanometrics.ca>
Date: Thu, 15 Mar 2012 23:51:02 -0400
Subject: [PATCH 14/23] aplay/arecord: option to treat any xrun as fatal

Signed-off-by: Ben Gardiner <bengardiner@nanometrics.ca>
Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 aplay/aplay.1 |  4 ++++
 aplay/aplay.c | 17 +++++++++++++++--
 2 files changed, 19 insertions(+), 2 deletions(-)

diff --git a/aplay/aplay.1 b/aplay/aplay.1
index 0195322..bf9b53e 100644
--- a/aplay/aplay.1
+++ b/aplay/aplay.1
@@ -191,6 +191,10 @@ lists capabilities of the selected device such as supported formats,
 sampling rates, numbers of channels, period and buffer bytes/sizes/times.
 For raw device hw:X this option basically lists hardware capabilities of
 the soundcard.
+.TP
+\fI\-\-fatal\-errors\fP
+Disables recovery attempts when errors (e.g. xrun) are encountered; the
+aplay process instead aborts immediately.
 
 .SH SIGNALS
 When recording, SIGINT, SIGTERM and SIGABRT will close the output 
diff --git a/aplay/aplay.c b/aplay/aplay.c
index 0633cbd..1ce34c4 100644
--- a/aplay/aplay.c
+++ b/aplay/aplay.c
@@ -115,6 +115,7 @@ static int stop_delay = 0;
 static int monotonic = 0;
 static int interactive = 0;
 static int can_pause = 0;
+static int fatal_errors = 0;
 static int verbose = 0;
 static int vumeter = VUMETER_NONE;
 static int buffer_pos = 0;
@@ -225,7 +226,8 @@ _("Usage: %s [OPTION]... [FILE]...\n"
 "                        for this many seconds\n"
 "    --process-id-file   write the process ID here\n"
 "    --use-strftime      apply the strftime facility to the output file name\n"
-"    --dump-hw-params    dump hw_params of the device\n")
+"    --dump-hw-params    dump hw_params of the device\n"
+"    --fatal-errors      treat all errors as fatal\n")
 		, command);
 	printf(_("Recognized sample formats are:"));
 	for (k = 0; k < SND_PCM_FORMAT_LAST; ++k) {
@@ -419,7 +421,8 @@ enum {
 	OPT_MAX_FILE_TIME,
 	OPT_PROCESS_ID_FILE,
 	OPT_USE_STRFTIME,
-	OPT_DUMP_HWPARAMS
+	OPT_DUMP_HWPARAMS,
+	OPT_FATAL_ERRORS,
 };
 
 int main(int argc, char *argv[])
@@ -465,6 +468,7 @@ int main(int argc, char *argv[])
 		{"use-strftime", 0, 0, OPT_USE_STRFTIME},
 		{"interactive", 0, 0, 'i'},
 		{"dump-hw-params", 0, 0, OPT_DUMP_HWPARAMS},
+		{"fatal-errors", 0, 0, OPT_FATAL_ERRORS},
 		{0, 0, 0, 0}
 	};
 	char *pcm_name = "default";
@@ -669,6 +673,9 @@ int main(int argc, char *argv[])
 		case OPT_DUMP_HWPARAMS:
 			dump_hw_params = 1;
 			break;
+		case OPT_FATAL_ERRORS:
+			fatal_errors = 1;
+			break;
 		default:
 			fprintf(stderr, _("Try `%s --help' for more information.\n"), command);
 			return 1;
@@ -1350,6 +1357,12 @@ static void xrun(void)
 		prg_exit(EXIT_FAILURE);
 	}
 	if (snd_pcm_status_get_state(status) == SND_PCM_STATE_XRUN) {
+		if (fatal_errors) {
+			error(_("fatal %s: %s"),
+					stream == SND_PCM_STREAM_PLAYBACK ? _("underrun") : _("overrun"),
+					snd_strerror(res));
+			prg_exit(EXIT_FAILURE);
+		}
 		if (monotonic) {
 #ifdef HAVE_CLOCK_GETTIME
 			struct timespec now, diff, tstamp;
-- 
1.7.11.4


From f55561381b999d3d56bcfb8dac2201f06c7a9b0e Mon Sep 17 00:00:00 2001
From: Takashi Iwai <tiwai@suse.de>
Date: Mon, 19 Mar 2012 16:03:33 +0100
Subject: [PATCH 15/23] amixer, alsamixer: Add description of volume-mapping

Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 alsamixer/alsamixer.1 | 13 +++++++++++++
 amixer/amixer.1       | 17 +++++++++++++++++
 2 files changed, 30 insertions(+)

diff --git a/alsamixer/alsamixer.1 b/alsamixer/alsamixer.1
index cd88404..8d34680 100644
--- a/alsamixer/alsamixer.1
+++ b/alsamixer/alsamixer.1
@@ -157,6 +157,19 @@ Quit the program with \fIALT Q\fP, or by hitting \fIESC\fP.
 Please note that you might need to hit \fIESC\fP twice on some terminals
 since it's regarded as a prefix key.
 
+.SH VOLUME MAPPING
+In \fBalsamixer\fP, the volume is mapped to a value that is more natural
+for a human ear.  The mapping is designed so that the position in the
+interval is proportional to the volume as a human ear would perceive
+it, i.e. the position is the cubic root of the linear sample
+multiplication factor.  For controls with a small range (24 dB or
+less), the mapping is linear in the dB values so that each step has
+the same size visually.
+
+Only for controls without dB information, a linear mapping of the
+hardware volume register values is used (this is the same algorithm as
+used in the old \fBalsamixer\fP).
+
 .SH SEE ALSO
 \fB
 amixer(1),
diff --git a/amixer/amixer.1 b/amixer/amixer.1
index b1ac323..3ed20a9 100644
--- a/amixer/amixer.1
+++ b/amixer/amixer.1
@@ -104,10 +104,21 @@ The commands to unmatched ids are ignored without errors too.
 .TP
 \fI\-h\fP 
 Help: show syntax.
+
 .TP
 \fI\-q\fP
 Quiet mode. Do not show results of changes.
 
+.TP
+\fI\-R\fP 
+Use the raw value for evaluating the percentage representation.
+This is the default mode.
+
+.TP
+\fI\-M\fP 
+Use the mapped volume for evaluating the percentage representation
+like \fBalsamixer\fR, to be more natural for human ear.
+
 .SH EXAMPLES
 
 .TP
@@ -134,8 +145,14 @@ will set the third soundcard's second line playback volume(s) to 40%
 \fBamixer \-c 2 cset numid=34 40%\fR
 will set the 34th soundcard element to 40%
 
+.SH SEE ALSO
+\fB
+alsamixer(1)
+\fP
+
 .SH BUGS 
 None known.
+
 .SH AUTHOR
 \fBamixer\fP is by Jaroslav Kysela <perex@perex.cz>.
 This document is by Paul Winkler <zarmzarm@erols.com> and Jaroslav Kysela <perex@perex.cz>.
-- 
1.7.11.4


From 0daa1163db4127755f1793e91544c6e28116ecdc Mon Sep 17 00:00:00 2001
From: Jerome Carretero <cJ@zougloub.eu>
Date: Sat, 5 May 2012 23:10:01 -0400
Subject: [PATCH 17/23] aplay: print vu-meter to stderr, not stdout

It allows showing the vu-meter while recording to stdout, eg:

   aplay -C -V stereo | oggenc - > out.ogg

Signed-off-by: Jerome Carretero <cJ@zougloub.eu>
Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 aplay/aplay.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/aplay/aplay.c b/aplay/aplay.c
index 1ce34c4..8462484 100644
--- a/aplay/aplay.c
+++ b/aplay/aplay.c
@@ -1453,9 +1453,9 @@ static void print_vu_meter_mono(int perc, int maxperc)
 		sprintf(line + val, "| MAX");
 	else
 		sprintf(line + val, "| %02i%%", maxperc);
-	fputs(line, stdout);
+	fputs(line, stderr);
 	if (perc > 100)
-		printf(_(" !clip  "));
+		fprintf(stderr, _(" !clip  "));
 }
 
 static void print_vu_meter_stereo(int *perc, int *maxperc)
@@ -1493,7 +1493,7 @@ static void print_vu_meter_stereo(int *perc, int *maxperc)
 			memcpy(line + bar_length, tmp, 3);
 	}
 	line[bar_length * 2 + 6 + 2] = 0;
-	fputs(line, stdout);
+	fputs(line, stderr);
 }
 
 static void print_vu_meter(signed int *perc, signed int *maxperc)
@@ -1631,9 +1631,9 @@ static void compute_max_peak(u_char *data, size_t count)
 			if (perc[c] > maxperc[c])
 				maxperc[c] = perc[c];
 
-		putchar('\r');
+		putc('\r', stderr);
 		print_vu_meter(perc, maxperc);
-		fflush(stdout);
+		fflush(stderr);
 	}
 	else if(verbose==3) {
 		printf(_("Max peak (%li samples): 0x%08x "), (long)ocount, max_peak[0]);
@@ -1642,8 +1642,8 @@ static void compute_max_peak(u_char *data, size_t count)
 				putchar('#');
 			else
 				putchar(' ');
-		printf(" %i%%\n", perc[0]);
-		fflush(stdout);
+		fprintf(stderr, " %i%%\n", perc[0]);
+		fflush(stderr);
 	}
 }
 
-- 
1.7.11.4


From 7b99f3a7249845716cf6057e563b7279b1f0dfc4 Mon Sep 17 00:00:00 2001
From: Takashi Iwai <tiwai@suse.de>
Date: Thu, 14 Jun 2012 13:14:48 +0200
Subject: [PATCH 18/23] alsactl: Read only *.conf files when a directory is
 passed via INCLUDE

When alsactl init is invoked and a directory path is passed to INCLUDE
command in the config file, read only *.conf files in that directory.
This will avoid reading backup files or invalid files that have been
created accidentally.

Also by using scandir() with alphasort(), alsactl reads the files in
alphabetical order.  Thus it's highly recommended to use some number
prefix to the file name for assuring the order.

Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 alsactl/alsactl_init.xml | 10 +++++++++-
 alsactl/init_parse.c     | 35 +++++++++++++++++++++++++----------
 2 files changed, 34 insertions(+), 11 deletions(-)

diff --git a/alsactl/alsactl_init.xml b/alsactl/alsactl_init.xml
index eefe9ef..bce26f5 100644
--- a/alsactl/alsactl_init.xml
+++ b/alsactl/alsactl_init.xml
@@ -474,7 +474,15 @@
             <varlistentry>
               <term><option>INCLUDE</option></term>
               <listitem>
-                <para>Include specified filename or all files in specified directory</para>
+                <para>Include the specified filename or files in specified directory.
+		</para>
+		<para>
+		When a directory is specified, only the files with the
+		extension ".conf" are read.
+		Also they are read in the alphabetical order.
+		Thus it's highly recommended to use some number prefix
+		(e.g. "01-something.conf") to assure the order of execucions.
+		</para>
               </listitem>
             </varlistentry>
 
diff --git a/alsactl/init_parse.c b/alsactl/init_parse.c
index 51b515c..8a7173b 100644
--- a/alsactl/init_parse.c
+++ b/alsactl/init_parse.c
@@ -1278,6 +1278,13 @@ static char *new_root_dir(const char *filename)
 	return res;
 }
 
+/* return non-zero if the file name has the extension ".conf" */
+static int conf_name_filter(const struct dirent *d)
+{
+	char *ext = strrchr(d->d_name, '.');
+	return ext && !strcmp(ext, ".conf");
+}
+
 static int parse_line(struct space *space, char *line, size_t linesize)
 {
 	char *linepos;
@@ -1480,8 +1487,7 @@ static int parse_line(struct space *space, char *line, size_t linesize)
 		if (strcasecmp(key, "INCLUDE") == 0) {
 			char *rootdir, *go_to;
 			const char *filename;
-			struct dirent *dirent;
-			DIR *dir;
+			struct stat st;
 			int linenum;
 			if (op != KEY_OP_ASSIGN) {
 				Perror(space, "invalid INCLUDE operation");
@@ -1498,18 +1504,27 @@ static int parse_line(struct space *space, char *line, size_t linesize)
 			go_to = space->go_to;
 			filename = space->filename;
 			linenum = space->linenum;
-			dir = opendir(string);
-			if (dir) {
+			if (stat(string, &st)) {
+				Perror(space, "invalid filename '%s'", string);
+				continue;
+			}
+			if (S_ISDIR(st.st_mode)) {
+				struct dirent **list;
+				int i, num;
+				num = scandir(string, &list, conf_name_filter,
+					      alphasort);
+				if (num < 0) {
+					Perror(space, "invalid directory '%s'", string);
+					continue;
+				}
 				count = strlen(string);
-				while ((dirent = readdir(dir)) != NULL) {
-					if (strcmp(dirent->d_name, ".") == 0 ||
-					    strcmp(dirent->d_name, "..") == 0)
-						continue;
+				for (i = 0; i < num; i++) {
 					string[count] = '\0';
 					strlcat(string, "/", sizeof(string));
-					strlcat(string, dirent->d_name, sizeof(string));
+					strlcat(string, list[i]->d_name, sizeof(string));
 					space->go_to = NULL;
 					space->rootdir = new_root_dir(string);
+					free(list[i]);
 					if (space->rootdir) {
 						err = parse(space, string);
 						free(space->rootdir);
@@ -1522,7 +1537,7 @@ static int parse_line(struct space *space, char *line, size_t linesize)
 					if (err)
 						break;
 				}
-				closedir(dir);
+				free(list);
 			} else {
 				space->go_to = NULL;
 				space->rootdir = new_root_dir(string);
-- 
1.7.11.4


From b3be2974b17d5310750ffc04ccb7ed74340c2136 Mon Sep 17 00:00:00 2001
From: Takashi Iwai <tiwai@suse.de>
Date: Thu, 14 Jun 2012 16:14:29 +0200
Subject: [PATCH 19/23] alsactl: Add reference to alsactl_init(7) in alsactl
 man page

Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 alsactl/alsactl.1 | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/alsactl/alsactl.1 b/alsactl/alsactl.1
index eb3cbd1..550b292 100644
--- a/alsactl/alsactl.1
+++ b/alsactl/alsactl.1
@@ -107,7 +107,8 @@ routing options, etc).
 \fB
 amixer(1),
 alsamixer(1),
-aplay(1)
+aplay(1),
+alsactl_init(7)
 \fP
 
 .SH BUGS 
-- 
1.7.11.4


From f0a1333be805dc76237c363da17c61976631a756 Mon Sep 17 00:00:00 2001
From: Takashi Iwai <tiwai@suse.de>
Date: Fri, 15 Jun 2012 16:34:55 +0200
Subject: [PATCH 20/23] aseqnet: Remove obsoleted .LO entry from man page

Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 seq/aseqnet/aseqnet.1 | 1 -
 1 file changed, 1 deletion(-)

diff --git a/seq/aseqnet/aseqnet.1 b/seq/aseqnet/aseqnet.1
index a1dc1d3..2cb6eb7 100644
--- a/seq/aseqnet/aseqnet.1
+++ b/seq/aseqnet/aseqnet.1
@@ -1,5 +1,4 @@
 .TH aseqnet 1 "January 1, 2000"
-.LO 1
 .SH NAME
 aseqnet \- ALSA sequencer connectors over network
 
-- 
1.7.11.4


From d79ca8f269bd3565e8c9374d0ddaf034ef7e52a2 Mon Sep 17 00:00:00 2001
From: Arun Raghavan <arun.raghavan@collabora.co.uk>
Date: Tue, 17 Jul 2012 15:45:33 +0530
Subject: [PATCH 21/23] aplay: Fix signal.h include

The correct header to include is <signal.h> not <sys/signal.h>.

Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 aplay/aplay.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/aplay/aplay.c b/aplay/aplay.c
index 8462484..932497d 100644
--- a/aplay/aplay.c
+++ b/aplay/aplay.c
@@ -42,10 +42,10 @@
 #include <alsa/asoundlib.h>
 #include <assert.h>
 #include <termios.h>
+#include <signal.h>
 #include <sys/poll.h>
 #include <sys/uio.h>
 #include <sys/time.h>
-#include <sys/signal.h>
 #include <sys/stat.h>
 #include <sys/types.h>
 #include <endian.h>
-- 
1.7.11.4


From 27d7ece434f8c053957426af6bffb4dbc4786c70 Mon Sep 17 00:00:00 2001
From: Arun Raghavan <arun.raghavan@collabora.co.uk>
Date: Tue, 17 Jul 2012 15:45:34 +0530
Subject: [PATCH 22/23] aplay: Use open() instead of open64()

AC_SYS_LARGEFILE in configure.in will automatically set up defines so
that open() will support large files if supported, and if not, this
allows us to fall back gracefully to non-LFS open().

Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 aplay/aplay.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/aplay/aplay.c b/aplay/aplay.c
index 932497d..17fa913 100644
--- a/aplay/aplay.c
+++ b/aplay/aplay.c
@@ -2499,7 +2499,7 @@ static void playback(char *name)
 		name = "stdin";
 	} else {
 		init_stdin();
-		if ((fd = open64(name, O_RDONLY, 0)) == -1) {
+		if ((fd = open(name, O_RDONLY, 0)) == -1) {
 			perror(name);
 			prg_exit(EXIT_FAILURE);
 		}
@@ -2707,12 +2707,12 @@ static int safe_open(const char *name)
 {
 	int fd;
 
-	fd = open64(name, O_WRONLY | O_CREAT, 0644);
+	fd = open(name, O_WRONLY | O_CREAT, 0644);
 	if (fd == -1) {
 		if (errno != ENOENT || !use_strftime)
 			return -1;
 		if (create_path(name) == 0)
-			fd = open64(name, O_WRONLY | O_CREAT, 0644);
+			fd = open(name, O_WRONLY | O_CREAT, 0644);
 	}
 	return fd;
 }
-- 
1.7.11.4


